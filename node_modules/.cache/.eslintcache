[{"/home/am-pc-32/Documents/interview/src/index.js":"1","/home/am-pc-32/Documents/interview/src/reportWebVitals.js":"2","/home/am-pc-32/Documents/interview/src/App.js":"3","/home/am-pc-32/Documents/interview/src/components/Indexinter.js":"4","/home/am-pc-32/Documents/interview/src/components/Finish.js":"5","/home/am-pc-32/Documents/interview/src/components/Test.js":"6","/home/am-pc-32/Documents/interview/src/components/Test2.js":"7","/home/am-pc-32/Documents/interview/src/components/Test3.js":"8","/home/am-pc-32/Documents/interview/src/components/Test4.js":"9","/home/am-pc-32/Documents/interview/src/components/Test5.js":"10","/home/am-pc-32/Documents/interview/src/components/Test6.js":"11","/home/am-pc-32/Documents/interview/src/components/Compo.js":"12","/home/am-pc-32/Documents/interview/src/components/Test7.js":"13","/home/am-pc-32/Documents/interview/src/components/Test8.js":"14","/home/am-pc-32/Documents/interview/src/components/Test9.js":"15"},{"size":288,"mtime":1636455246142,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1636455057982,"results":"18","hashOfConfig":"17"},{"size":962,"mtime":1637060314922,"results":"19","hashOfConfig":"17"},{"size":1669,"mtime":1637134386967,"results":"20","hashOfConfig":"17"},{"size":1829,"mtime":1637133648024,"results":"21","hashOfConfig":"17"},{"size":6398,"mtime":1636633869507,"results":"22","hashOfConfig":"17"},{"size":7169,"mtime":1636700545060,"results":"23","hashOfConfig":"17"},{"size":8233,"mtime":1636717510753,"results":"24","hashOfConfig":"17"},{"size":9329,"mtime":1636958846971,"results":"25","hashOfConfig":"17"},{"size":10391,"mtime":1637038844010,"results":"26","hashOfConfig":"17"},{"size":8659,"mtime":1637052122863,"results":"27","hashOfConfig":"17"},{"size":2640,"mtime":1636972625282,"results":"28","hashOfConfig":"17"},{"size":13593,"mtime":1637139419482,"results":"29","hashOfConfig":"17"},{"size":12017,"mtime":1637055406498,"results":"30","hashOfConfig":"17"},{"size":11979,"mtime":1637059660045,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1xxag77",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"34"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"34"},"/home/am-pc-32/Documents/interview/src/index.js",[],["74","75"],"/home/am-pc-32/Documents/interview/src/reportWebVitals.js",[],"/home/am-pc-32/Documents/interview/src/App.js",["76","77","78","79","80","81","82","83"],"import \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route ,Navigate} from \"react-router-dom\";\nimport Indexinter from \"./components/Indexinter\"\nimport Finish from \"./components/Finish\";\nimport Test from \"./components/Test\";\nimport Test2 from \"./components/Test2\";\nimport Test3 from \"./components/Test3\";\nimport Test4 from \"./components/Test4\";\nimport Test5 from \"./components/Test5\";\nimport Test6 from \"./components/Test6\";\nimport Test7 from \"./components/Test7\";\nimport Test8 from \"./components/Test8\";\nimport Test9 from \"./components/Test9\";\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          <Route exact path=\"/index\"><Indexinter/></Route>\n          <Navigate to=\"/index\"/>\n          <Route path=\"/test/:id/:num\">\n            <Test7/>\n          </Route>\n          <Route path=\"/finish\">\n            <Finish/>\n          </Route>\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/am-pc-32/Documents/interview/src/components/Indexinter.js",[],"/home/am-pc-32/Documents/interview/src/components/Finish.js",["84","85"],"// import React,{useState,useEffect} from \"react\";\nimport { useNavigate} from \"react-router-dom\";\n\n\n\nfunction Finish(){\n  let marks = []\n  let correct =0\n  let wrong =0 \n  let history = useNavigate();\n\n    let currtest = localStorage.getItem(\"test\");\n    marks = JSON.parse(currtest);\n    marks.status = \"finish\"\n    localStorage.setItem(\"test\", JSON.stringify(marks))\n\n    // console.log(marks)\n    for(let i=0;i<marks.corctans.length;i++)\n    {\n      if(marks.corctans[i]==\"correct\")\n      {\n       correct++\n      }\n      else{\n        wrong++\n      }\n    }\n \n  //----------------------Go to Index Page----------------------//\n    let backtoIndx = () => {\n      history(\"/index\");\n      window.location.reload(false)\n    }\n\n  return (\n    <>\n       <div class=\"container\">\n        <div class=\"row\">\n        <h1 style={{textAlign:\"left\",fontFamily:\"sans-serif\",fontWeight:500}}>My Interview Portal</h1>\n            <hr/>\n            <div class=\"col-md-12\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\">{marks.testname}</div>\n                    <div class=\"panel-body\">\n                        <center>\n                            <h2>Total no of Questions : {marks.corctans.length}</h2>\n                            <h3 class=\"text-success\">Correct Answers: {correct}\n                            <span style={{marginLeft:20}} class=\"text-danger\">Wrong Answers: {wrong}</span></h3>\n                        </center>\n                    </div>\n                    <div class=\"panel-footer\" style={{textAlign:\"centre\"}}> \n                     <a class=\"btn btn-warning\" onClick={()=>backtoIndx()} style={{color:\"black\"}}>Back to Test Page</a>\n                     </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </>\n  );\n}\n\nexport default Finish;\n","/home/am-pc-32/Documents/interview/src/components/Test.js",["86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],"import React,{useState,useEffect} from \"react\";\nimport Axios from '../../node_modules/axios';\nimport { useNavigate,useParams } from \"react-router-dom\";\n\n\nfunction Test(){\n  let history = useNavigate();\n    var inteobj = []\n    const [axlist, setstate] = useState(inteobj)\n    const [ansoptn,setoptin] = useState(\"\")\n    const [multioptn,setmulti] = useState([])\n\n    let {id} = useParams();\n    let {num} = useParams();\n    let testarr = []\n\n    let curnum\n    let testindx\n    let optionlist\n\n    console.log(id);\n    console.log(num);\n    \n    let testquest = []\n    let testname\n    let options = []\n    let type = \"Multiple-Response\"\n    let limit\n\n\n\n    useEffect(() => {\n    Axios.get(\"http://interviewapi.stgbuild.com/getQuizData\").then((response) => {\n    const inlist = response.data.tests\n    setstate(inlist)\n      })\n    },[])\n\n\n\nlet currtest = localStorage.getItem(\"test\");\n    testarr = JSON.parse(currtest);\n    console.log(testarr)\n\n\n\n  for(let i=0;i<axlist.length;i++)\n  {\n   if(axlist[i]._id == id)\n   {\n    testindx = i\n    testname =axlist[i].name\n    limit = axlist[i].questions.length\n    for(let j=0;j<limit;j++)\n    {\n      if(axlist[i].questions[j]._id == num)\n      {\n        curnum = j\n      }\n    }\n    testquest = axlist[i].questions[curnum]\n    options = testquest.options\n    if(testquest.type == type)\n    {\n      type = \"Multiple-Response\"\n    }\n    else{\n        type = \"Single\" \n    }\n    console.log(type)\n   }\n  }\n\n\n\n\n let nextquest = () => {\n  let nextpage = axlist[testindx].questions[curnum+1]._id\n  console.log(ansoptn)\n  console.log(multioptn)\n  console.log(axlist[testindx].questions[curnum].correctOptionIndex)\n  \n  if(axlist[testindx].questions[curnum].type == \"Multiple-Response\")\n  {\n    if(axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length)\n  {\n    let sum1 =0\n    let sum2 =0\n    for(let i=0;i<axlist[testindx].questions[curnum].correctOptionIndex.length;i++)\n    {\n      sum1 += axlist[testindx].questions[curnum].correctOptionIndex[i]\n      sum2 += parseInt(multioptn[i])\n      console.log(sum1)\n      console.log(sum2)\n    }\n    if(sum1 == sum2)\n    {\n      testarr.corctans.push(\"correct\")\n    }\n    else{\n      testarr.corctans.push(\"wrong\")\n    }\n  }\n}\n  else\n  {\n   if(axlist[testindx].questions[curnum].correctOptionIndex == ansoptn)\n   {\n    testarr.corctans.push(\"correct\")\n   }\n   else{\n    testarr.corctans.push(\"wrong\")\n   }\n  }\n  localStorage.setItem(\"test\", JSON.stringify(testarr))\n  history(\"/test/\"+id+\"/\"+nextpage);\n}\n\n\n\n\n let finish = () => {\n  if(axlist[testindx].questions[curnum].type == \"Multiple-Response\")\n  {\n    if(axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length)\n  {\n    let sum1 =0\n    let sum2 =0\n    for(let i=0;i<axlist[testindx].questions[curnum].correctOptionIndex.length;i++)\n    {\n      sum1 += axlist[testindx].questions[curnum].correctOptionIndex[i]\n      sum2 += parseInt(multioptn[i])\n      console.log(sum1)\n      console.log(sum2)\n    }\n    if(sum1 == sum2)\n    {\n      testarr.corctans.push(\"correct\")\n    }\n    else{\n      testarr.corctans.push(\"wrong\")\n    }\n   }\n  }\n  else\n  {\n  if(axlist[testindx].questions[curnum].correctOptionIndex == ansoptn)\n  {\n   testarr.corctans.push(\"correct\")\n  }\n  else{\n    testarr.corctans.push(\"wrong\")\n  }\n }\n  localStorage.setItem(\"test\", JSON.stringify(testarr))\n  history(\"/finish\")\n }\n\n\n\n let handleRadio = event =>{\n  setoptin(event.target.value)\n }\n\n let handleCheck = event =>{\n   let temparr = multioptn\n\n   if(temparr.includes(event.target.value)==true)\n   {\n    let indx = temparr.indexOf(event.target.value)\n    temparr.splice(indx, 1)\n   }\n   else{\n    temparr.push(event.target.value)\n   }\n  setmulti(temparr)\n }\n\n\n\n if(type == \"Single\"){\n  optionlist = options.map((optn,index) =>\n <div class=\"radio\">\n <input onChange={handleRadio} type=\"radio\" name=\"option\" value={index}/>{optn}\n </div>\n );\n }\n else{\n    optionlist = options.map((optn,index) =>\n    <div class=\"checkbox\">\n    <input onChange={handleCheck} type=\"checkbox\" name={index} value={index}/>\n    <label for={index}>{optn}</label>\n    </div>\n    );\n }\n\n\n\n\n if(type == \"Single\")\n {\n  return(\n    <div class=\"container\">\n        <div class=\"row\">\n        <h1>My Interview Portal</h1>\n            <hr/>\n            <div class=\"col-md-12\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\" style={{textAlign:\"left\"}}>{testname}</div>\n                    <div class=\"panel-body\">\n                        <form style={{textAlign:\"left\",paddingLeft:15}}>\n                            <label >{testquest.questionText}</label>\n                            {optionlist}\n                        </form>\n                    </div>\n                      \n                    {curnum == limit-1 ? \n                    <div class=\"panel-footer\" style={{textAlign:\"right\"}}> \n                    <a onClick={()=>finish()} class=\"btn btn-danger\">Finish</a>\n                    </div>\n          :\n          <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n          <a onClick={()=>nextquest()} class=\"btn btn-success\">Next</a>\n          </div>\n          }\n            </div>\n        </div>\n    </div>\n    </div>\n  );\n }\nelse{\n  return(\n    <div class=\"container\">\n        <div class=\"row\">\n        <h1>My Interview Portal</h1>\n            <hr/>\n            <div class=\"col-md-12\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\" style={{textAlign:\"left\"}}>{testname}</div>\n                    <div class=\"panel-body\">\n                        <form style={{textAlign:\"left\",paddingLeft:15}}>\n                        <label><b>{testquest.questionText}</b></label>\n                                <div>\n                                {optionlist}\n                                </div>\n                        </form>\n                    </div>\n                      \n                    {curnum == limit-1 \n                    ? <div class=\"panel-footer\"> \n                    <a style={{textAlign:\"right\"}} onClick={()=>finish()} class=\"btn btn-danger\">Finish</a>\n                    </div>\n          :    <div style={{textAlign:\"left\"}} class=\"panel-footer\">\n            <a onClick={()=>nextquest()}  class=\"btn btn-success\">Next</a>\n            </div>}\n              </div>\n        </div>\n    </div>\n    </div>\n  );\n}\n\n}\n\nexport default Test;\n","/home/am-pc-32/Documents/interview/src/components/Test2.js",["106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132"],"import React,{useState,useEffect} from \"react\";\nimport { useNavigate,useParams } from \"react-router-dom\";\n\n\nfunction Test2(){\n\n    let axlist = []\n    let testarr = []\n    let currtest = localStorage.getItem(\"test\");\n    testarr = JSON.parse(currtest);\n    console.log(testarr)\n    axlist = testarr.json\n\n\n  let history = useNavigate();\n    const [ansoptn,setoptin] = useState(\"\")\n    const [multioptn,setmulti] = useState([])\n\n    let {id} = useParams();\n    let {num} = useParams();\n\n    let curnum\n    let testindx\n    let optionlist\n\n    console.log(id);\n    console.log(num);\n    \n    let testquest = []\n    let testname\n    let options = []\n    let type = \"Multiple-Response\"\n    let limit\n\n\n  for(let i=0;i<axlist.length;i++)\n  {\n   if(axlist[i]._id == id)\n   {\n    testindx = i\n    testname =axlist[i].name\n    limit = axlist[i].questions.length\n    for(let j=0;j<limit;j++)\n    {\n      if(axlist[i].questions[j]._id == num)\n      {\n        curnum = j\n      }\n    }\n    testquest = axlist[i].questions[curnum]\n    options = testquest.options\n    if(testquest.type == type)\n    {\n      type = \"Multiple-Response\"\n    }\n    else{\n        type = \"Single\" \n    }\n    console.log(type)\n   }\n  }\n\n\n  let prevquest = () => {\n    let prevpage = axlist[testindx].questions[curnum-1]._id\n    history(\"/test/\"+id+\"/\"+prevpage);\n  }\n\n\n  \n let nextquest = () => {\n  let nextpage = axlist[testindx].questions[curnum+1]._id\n  console.log(ansoptn)\n  console.log(multioptn)\n  console.log(axlist[testindx].questions[curnum].correctOptionIndex)\n  \n  if(axlist[testindx].questions[curnum].type == \"Multiple-Response\")\n  {\n    if(axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length)\n  {\n    let sum1 =0\n    let sum2 =0\n    for(let i=0;i<axlist[testindx].questions[curnum].correctOptionIndex.length;i++)\n    {\n      sum1 += axlist[testindx].questions[curnum].correctOptionIndex[i]\n      sum2 += parseInt(multioptn[i])\n      console.log(sum1)\n      console.log(sum2)\n    }\n    if(sum1 == sum2)\n    {\n      testarr.corctans.push(\"correct\")\n    }\n    else{\n      testarr.corctans.push(\"wrong\")\n    }\n  }\n  else{\n    testarr.corctans.push(\"wrong\")\n  }\n}\n  else\n  {\n   if(axlist[testindx].questions[curnum].correctOptionIndex == ansoptn)\n   {\n    testarr.corctans.push(\"correct\")\n   }\n   else{\n    testarr.corctans.push(\"wrong\")\n   }\n  }\n  localStorage.setItem(\"test\", JSON.stringify(testarr))\n  history(\"/test/\"+id+\"/\"+nextpage);\n}\n\n\n\n\n let finish = () => {\n  if(axlist[testindx].questions[curnum].type == \"Multiple-Response\")\n  {\n    if(axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length)\n  {\n    let sum1 =0\n    let sum2 =0\n    for(let i=0;i<axlist[testindx].questions[curnum].correctOptionIndex.length;i++)\n    {\n      sum1 += axlist[testindx].questions[curnum].correctOptionIndex[i]\n      sum2 += parseInt(multioptn[i])\n      console.log(sum1)\n      console.log(sum2)\n    }\n    if(sum1 == sum2)\n    {\n      testarr.corctans.push(\"correct\")\n    }\n    else{\n      testarr.corctans.push(\"wrong\")\n    }\n   }\n  }\n  else\n  {\n  if(axlist[testindx].questions[curnum].correctOptionIndex == ansoptn)\n  {\n   testarr.corctans.push(\"correct\")\n  }\n  else{\n    testarr.corctans.push(\"wrong\")\n  }\n }\n  localStorage.setItem(\"test\", JSON.stringify(testarr))\n  history(\"/finish\")\n }\n\n\n\n let handleRadio = event =>{\n  setoptin(event.target.value)\n }\n\n \n let handleCheck = event =>{\n   let temparr = multioptn\n\n   if(temparr.includes(event.target.value)==true)\n   {\n    let indx = temparr.indexOf(event.target.value)\n    temparr.splice(indx, 1)\n   }\n   else{\n    temparr.push(event.target.value)\n   }\n  setmulti(temparr)\n }\n\n\n\n if(type == \"Single\"){\n  optionlist = options.map((optn,index) =>\n <div class=\"radio\">\n <input onChange={handleRadio} type=\"radio\" name=\"option\" value={index}/>{optn}\n </div>\n );\n }\n else{\n    optionlist = options.map((optn,index) =>\n    <div class=\"checkbox\">\n    <input onChange={handleCheck} type=\"checkbox\" name={index} value={index}/>\n    <label for={index}>{optn}</label>\n    </div>\n    );\n }\n\n\n\n\n if(type == \"Single\")\n {\n  return(\n    <div class=\"container\">\n        <div class=\"row\">\n        <h1>My Interview Portal</h1>\n            <hr/>\n            <div class=\"col-md-12\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\" style={{textAlign:\"left\"}}>{testname}</div>\n                    <div class=\"panel-body\">\n                        <form style={{textAlign:\"left\",paddingLeft:15}}>\n                            <label >{testquest.questionText}</label>\n                            {optionlist}\n                        </form>\n                    </div>\n                      \n                    {curnum == limit-1 ? \n                    <div class=\"panel-footer\" style={{textAlign:\"right\"}}> \n                    <a onClick={()=>finish()} class=\"btn btn-danger\">Finish</a>\n                    </div>\n                    :curnum == 0 ? \n                     <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                     <a onClick={()=>nextquest()} class=\"btn btn-success\">Next</a>\n                     </div>\n                     :\n                      <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                      <a onClick={()=>prevquest()} class=\"btn btn-success\">Previous</a>\n                      <a onClick={()=>nextquest()} class=\"btn btn-success\" style={{marginLeft:15}}>Next</a>\n                      </div>                     \n                     }\n            </div>\n        </div>\n    </div>\n    </div>\n  );\n }\nelse{\n  return(\n    <div class=\"container\">\n        <div class=\"row\">\n        <h1>My Interview Portal</h1>\n            <hr/>\n            <div class=\"col-md-12\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\" style={{textAlign:\"left\"}}>{testname}</div>\n                    <div class=\"panel-body\">\n                        <form style={{textAlign:\"left\",paddingLeft:15}}>\n                        <label><b>{testquest.questionText}</b></label>\n                                <div>\n                                {optionlist}\n                                </div>\n                        </form>\n                    </div>\n                      \n                    {curnum == limit-1 ? \n                    <div class=\"panel-footer\" style={{textAlign:\"right\"}}> \n                    <a onClick={()=>finish()} class=\"btn btn-danger\">Finish</a>\n                    </div>\n                    :curnum == 0 ? \n                     <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                     <a onClick={()=>nextquest()} class=\"btn btn-success\">Next</a>\n                     </div>\n                     :\n                      <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                      <a onClick={()=>prevquest()} class=\"btn btn-success\">Previous</a>\n                      <a onClick={()=>nextquest()} class=\"btn btn-success\" style={{marginLeft:15}}>Next</a>\n                      </div>                     \n                     }\n              </div>\n        </div>\n    </div>\n    </div>\n  );\n}\n\n}\n\nexport default Test2;\n","/home/am-pc-32/Documents/interview/src/components/Test3.js",["133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163"],"import React,{useState,useEffect} from \"react\";\nimport { useNavigate,useParams } from \"react-router-dom\";\n\n\nfunction Test3(){\n\n    let axlist = []\n    let testarr = []\n    let currtest = localStorage.getItem(\"test\");\n    testarr = JSON.parse(currtest);\n    console.log(testarr)\n    axlist = testarr.json\n\n\n  let history = useNavigate();\n    const [ansoptn,setoptin] = useState()\n    const [multioptn,setmulti] = useState([])\n\n    let {id} = useParams();\n    let {num} = useParams();\n\n    let curnum\n    let testindx\n    let optionlist\n\n    console.log(id);\n    console.log(num);\n    \n    let testquest = []\n    let testname\n    let options = []\n    let type = \"Multiple-Response\"\n    let limit\n\n\n\n  for(let i=0;i<axlist.length;i++)\n  {\n   if(axlist[i]._id == id)\n   {\n    testindx = i\n    testname =axlist[i].name\n    limit = axlist[i].questions.length\n    for(let j=0;j<limit;j++)\n    {\n      if(axlist[i].questions[j]._id == num)\n      {\n        curnum = j\n        if(curnum <= testarr.corctans.length-1)\n        {\n          testarr.corctans.splice(curnum,1)\n          testarr.ans.splice(curnum,1)\n          localStorage.setItem(\"test\", JSON.stringify(testarr))\n        }\n      }\n    }\n    testquest = axlist[i].questions[curnum]\n    options = testquest.options\n    if(testquest.type == type)\n    {\n      type = \"Multiple-Response\"\n    }\n    else{\n        type = \"Single\" \n    }\n    console.log(type)\n   }\n  }\n\n\n\n\n\n  let prevquest = () => {\n    setmulti([])\n    let prevpage = axlist[testindx].questions[curnum-1]._id\n    history(\"/test/\"+id+\"/\"+prevpage);\n  }\n\n\n\n\n\n let nextquest = () => {\n  let nextpage = axlist[testindx].questions[curnum+1]._id\n  console.log(ansoptn)\n  console.log(multioptn)\n  console.log(axlist[testindx].questions[curnum].correctOptionIndex)\n  \n  if(axlist[testindx].questions[curnum].type == \"Multiple-Response\")\n  {\n    let counter = 0\n    if(axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length)\n  {\n    for(let i=0;i<axlist[testindx].questions[curnum].correctOptionIndex.length;i++)\n    {\n      for(let j=0;j<multioptn.length;j++)\n      {\n        if(axlist[testindx].questions[curnum].correctOptionIndex[i] == parseInt(multioptn[j]))\n        {\n         counter++\n        }\n      }\n    }\n    console.log(counter)\n    if(counter == multioptn.length)\n    {\n      testarr.ans.push(multioptn)\n      testarr.corctans.push(\"correct\")\n      setmulti([])\n    }\n    else{\n      testarr.ans.push(multioptn)\n      testarr.corctans.push(\"wrong\")\n      setmulti([])\n    }\n  }\n  else{\n    testarr.ans.push(multioptn)\n    testarr.corctans.push(\"wrong\")\n    setmulti([])\n  }\n}\n  else\n  {\n   if(axlist[testindx].questions[curnum].correctOptionIndex == ansoptn)\n   {\n    testarr.ans.push(ansoptn)\n    testarr.corctans.push(\"correct\")\n   }\n   else{\n    testarr.ans.push(ansoptn)\n    testarr.corctans.push(\"wrong\")\n   }\n  }\n  localStorage.setItem(\"test\", JSON.stringify(testarr))\n  history(\"/test/\"+id+\"/\"+nextpage);\n}\n\n\n\n\n\n\n let finish = () => {\n  if(axlist[testindx].questions[curnum].type == \"Multiple-Response\")\n  {\n    let counter = 0\n    if(axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length)\n  {\n    for(let i=0;i<axlist[testindx].questions[curnum].correctOptionIndex.length;i++)\n    {\n      for(let j=0;j<multioptn.length;j++)\n      {\n        if(axlist[testindx].questions[curnum].correctOptionIndex[i] == parseInt(multioptn[j]))\n        {\n         counter++\n        }\n      }\n    }\n    console.log(counter)\n    if(counter == multioptn.length)\n    {\n      testarr.ans.push(multioptn)\n      testarr.corctans.push(\"correct\")\n      setmulti([])\n    }\n    else{\n      testarr.ans.push(multioptn)\n      testarr.corctans.push(\"wrong\")\n      setmulti([])\n    }\n  }\n  else{\n    testarr.ans.push(multioptn)\n    testarr.corctans.push(\"wrong\")\n    setmulti([])\n  }\n  }\n  else\n  {\n  if(axlist[testindx].questions[curnum].correctOptionIndex == ansoptn)\n  {\n    testarr.ans.push(ansoptn)\n   testarr.corctans.push(\"correct\")\n  }\n  else{\n    testarr.ans.push(ansoptn)\n    testarr.corctans.push(\"wrong\")\n  }\n }\n  localStorage.setItem(\"test\", JSON.stringify(testarr))\n  history(\"/finish\")\n }\n\n\n\n\n\n\n let handleRadio = event =>{\n  setoptin(event.target.value)\n }\n\n\n \n\n\n let handleCheck = event =>{\n   let temparr = multioptn\n   if(temparr.includes(event.target.value)==true)\n   {\n    let indx = temparr.indexOf(event.target.value)\n    temparr.splice(indx, 1)\n   }\n   else{\n    temparr.push(event.target.value)\n   }\n  setmulti(temparr)\n }\n\n\n\n\n\n\n if(type == \"Single\"){\n  optionlist = options.map((optn,index) =>\n <div class=\"radio\">\n <input onChange={handleRadio} type=\"radio\" name=\"option\" value={index}/>{optn}\n </div>\n );\n }\n else{\n    optionlist = options.map((optn,index) =>\n    <div class=\"checkbox\">\n    <input onChange={handleCheck} type=\"checkbox\" name={index} value={index}/>\n    <label for={index}>{optn}</label>\n    </div>\n    );\n }\n\n\n\n\n\n\n if(type == \"Single\")\n {\n  return(\n    <div class=\"container\">\n        <div class=\"row\">\n        <h1>My Interview Portal</h1>\n            <hr/>\n            <div class=\"col-md-12\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\" style={{textAlign:\"left\"}}>{testname}</div>\n                    <div class=\"panel-body\">\n                        <form style={{textAlign:\"left\",paddingLeft:15}}>\n                            <label >{testquest.questionText}</label>\n                            {optionlist}\n                        </form>\n                    </div>\n                      \n                    {curnum == limit-1 ? \n                    <div class=\"panel-footer\" style={{textAlign:\"right\"}}> \n                    <a style={{marginRight:960}} onClick={()=>prevquest()} class=\"btn btn-success\">Previous</a>\n                    <a onClick={()=>finish()} class=\"btn btn-danger\">Finish</a>\n                    </div>\n                    :curnum == 0 ? \n                     <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                     <a onClick={()=>nextquest()} class=\"btn btn-success\">Next</a>\n                     </div>\n                     :\n                      <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                      <a onClick={()=>prevquest()} class=\"btn btn-success\">Previous</a>\n                      <a onClick={()=>nextquest()} class=\"btn btn-success\" style={{marginLeft:15}}>Next</a>\n                      </div>                     \n                     }\n\n            </div>\n        </div>\n    </div>\n    </div>\n  );\n }\nelse{\n  return(\n    <div class=\"container\">\n        <div class=\"row\">\n        <h1>My Interview Portal</h1>\n            <hr/>\n            <div class=\"col-md-12\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\" style={{textAlign:\"left\"}}>{testname}</div>\n                    <div class=\"panel-body\">\n                        <form style={{textAlign:\"left\",paddingLeft:15}}>\n                        <label><b>{testquest.questionText}</b></label>\n                                <div>\n                                {optionlist}\n                                </div>\n                        </form>\n                    </div>\n          \n                    {curnum == limit-1 ? \n                    <div class=\"panel-footer\" style={{textAlign:\"right\"}}> \n                    <a onClick={()=>prevquest()} style={{marginRight:960}} class=\"btn btn-success\">Previous</a>\n                    <a onClick={()=>finish()} class=\"btn btn-danger\">Finish</a>\n                    </div>\n                    :curnum == 0 ? \n                     <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                     <a onClick={()=>nextquest()} class=\"btn btn-success\">Next</a>\n                     </div>\n                     :\n                      <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                      <a onClick={()=>prevquest()} class=\"btn btn-success\">Previous</a>\n                      <a onClick={()=>nextquest()} class=\"btn btn-success\" style={{marginLeft:15}}>Next</a>\n                      </div>                     \n                     }\n\n              </div>\n        </div>\n    </div>\n    </div>\n  );\n}\n\n}\n\nexport default Test3;\n","/home/am-pc-32/Documents/interview/src/components/Test4.js",["164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196"],"import React,{useState,useEffect} from \"react\";\nimport { useNavigate,useParams } from \"react-router-dom\";\n\n\nfunction Test5(){\n\n    let axlist = []\n    let testarr = []\n    let currtest = localStorage.getItem(\"test\");\n    testarr = JSON.parse(currtest);\n    console.log(testarr)\n    axlist = testarr.json\n\n\n  let history = useNavigate();\n    var ansoptn = \"\"\n    const [multioptn,setmulti] = useState([])\n\n    let {id} = useParams();\n    let {num} = useParams();\n\n    let curnum\n    let testindx\n    let optionlist\n\n    console.log(id);\n    console.log(num);\n    \n    let testquest = []\n    let testname\n    let options = []\n    let type = \"Multiple-Response\"\n    let limit\n\n\n\n  for(let i=0;i<axlist.length;i++)\n  {\n   if(axlist[i]._id == id)\n   {\n    testindx = i\n    testname =axlist[i].name\n    limit = axlist[i].questions.length\n    for(let j=0;j<limit;j++)\n    {\n      if(axlist[i].questions[j]._id == num)\n      {\n        curnum = j\n        if(curnum <= testarr.corctans.length-1)\n        {\n          testarr.corctans.splice(curnum,1)\n        //   testarr.ans.splice(curnum,1)\n          localStorage.setItem(\"test\", JSON.stringify(testarr))\n        }\n      }\n    }\n    testquest = axlist[i].questions[curnum]\n    options = testquest.options\n    if(testquest.type == type)\n    {\n      type = \"Multiple-Response\"\n    }\n    else{\n        type = \"Single\" \n    }\n    console.log(type)\n   }\n  }\n\n\n\n\n\n  let prevquest = () => {\n    setmulti([])\n    let prevpage = axlist[testindx].questions[curnum-1]._id\n    history(\"/test/\"+id+\"/\"+prevpage);\n  }\n\n\n\n\n\n let nextquest = () => {\n  let nextpage = axlist[testindx].questions[curnum+1]._id\n  console.log(ansoptn)\n  console.log(multioptn)\n  console.log(axlist[testindx].questions[curnum].correctOptionIndex)\n  \n  if(axlist[testindx].questions[curnum].type == \"Multiple-Response\")\n  {\n    let counter = 0\n    if(axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length)\n  {\n    for(let i=0;i<axlist[testindx].questions[curnum].correctOptionIndex.length;i++)\n    {\n      for(let j=0;j<multioptn.length;j++)\n      {\n        if(axlist[testindx].questions[curnum].correctOptionIndex[i] == parseInt(multioptn[j]))\n        {\n         counter++\n        }\n      }\n    }\n    console.log(counter)\n    if(counter == multioptn.length)\n    {\n      testarr.ans[curnum]=multioptn\n      testarr.corctans.push(\"correct\")\n      setmulti([])\n    }\n    else{\n      testarr.ans[curnum]=multioptn\n      testarr.corctans.push(\"wrong\")\n      setmulti([])\n    }\n  }\n  else{\n    testarr.ans[curnum]=multioptn\n    testarr.corctans.push(\"wrong\")\n    setmulti([])\n  }\n}\n  else\n  {\n   if(axlist[testindx].questions[curnum].correctOptionIndex == ansoptn)\n   {\n    testarr.ans[curnum]=ansoptn\n    testarr.corctans.push(\"correct\")\n   }\n   else{\n    testarr.ans[curnum]=ansoptn\n    testarr.corctans.push(\"wrong\")\n   }\n  }\n  localStorage.setItem(\"test\", JSON.stringify(testarr))\n  history(\"/test/\"+id+\"/\"+nextpage);\n}\n\n\n\n\n\n let finish = () => {\n  if(axlist[testindx].questions[curnum].type == \"Multiple-Response\")\n  {\n    let counter = 0\n    if(axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length)\n  {\n    for(let i=0;i<axlist[testindx].questions[curnum].correctOptionIndex.length;i++)\n    {\n      for(let j=0;j<multioptn.length;j++)\n      {\n        if(axlist[testindx].questions[curnum].correctOptionIndex[i] == parseInt(multioptn[j]))\n        {\n         counter++\n        }\n      }\n    }\n    console.log(counter)\n    if(counter == multioptn.length)\n    {\n        testarr.ans[curnum]=multioptn\n        testarr.corctans.push(\"correct\")\n      setmulti([])\n    }\n    else{\n        testarr.ans[curnum]=multioptn\n        testarr.corctans.push(\"wrong\")\n      setmulti([])\n    }\n  }\n  else{\n    testarr.ans[curnum]=multioptn\n    testarr.corctans.push(\"wrong\")\n    setmulti([])\n  }\n  }\n  else\n  {\n  if(axlist[testindx].questions[curnum].correctOptionIndex == ansoptn)\n  {\n    testarr.ans[curnum]=ansoptn\n   testarr.corctans.push(\"correct\")\n  }\n  else{\n    testarr.ans[curnum]=ansoptn\n    testarr.corctans.push(\"wrong\")\n  }\n }\n  localStorage.setItem(\"test\", JSON.stringify(testarr))\n  history(\"/finish\")\n }\n\n\n\n\n\n\n let handleRadio = event =>{\n  event.target.checked = true\n  ansoptn=event.target.value\n  console.log(ansoptn)\n }\n\n\n \n\n\n let handleCheck = event =>{\n   let temparr = multioptn\n   if(temparr.includes(event.target.value)==true)\n   {\n    let indx = temparr.indexOf(event.target.value)\n    temparr.splice(indx, 1)\n   }\n   else{\n    temparr.push(event.target.value)\n   }\n  setmulti(temparr)\n }\n\n\n\n\n\n\n if(type == \"Single\"){\n    \n    let ansarr = []\n    let temparr = []\n    let temp = localStorage.getItem(\"test\");\n    temparr = JSON.parse(temp);\n    ansarr = temparr.ans\n     console.log(ansarr[curnum])\n     console.log(curnum)\n   \n    if(typeof ansarr[curnum] == \"undefined\")\n    {\n   optionlist = options.map((optn,index) =>\n   <div>\n  <input  id={index} onClick={handleRadio} type=\"radio\" name=\"option\" value={index}/><label for={index}>{optn}</label>\n  </div>);\n  }\n    else{\n      optionlist = options.map((optn,index) =>\n      (ansarr[curnum] == index.toString())\n      ?\n    <><div>\n     <input  id={index} checked={true} onClick={handleRadio} type=\"radio\" name=\"option\" value={index}/><label for={index}>{optn}</label>\n     </div></>\n     :<><div>\n     <input  id={index} onClick={handleRadio} type=\"radio\" name=\"option\" value={index}/><label for={index}>{optn}</label>\n     </div></>\n   );\n    }\n  }\n else{\n    let ansarr = []\n    let temparr = []\n    let temp = localStorage.getItem(\"test\");\n    temparr = JSON.parse(temp);\n    ansarr = temparr.ans\n    \n    \n    // for(let i=0;i<4;i++)\n    // {\n    // if((ansarr[curnum]).includes(i.toString()) == true)\n    // {\n    //     console.log(i)\n    // }\n    // }\n   \n\n\n    optionlist = options.map((optn,index) =>\n    <div class=\"checkbox\">\n    <input onChange={handleCheck} type=\"checkbox\" name={index} value={index}/>\n    <label for={index}>{optn}</label>\n    </div>\n    );\n }\n\n\n\n\n\n\n if(type == \"Single\")\n {\n  return(\n    <div class=\"container\">\n        <div class=\"row\">\n        <h1>My Interview Portal</h1>\n            <hr/>\n            <div class=\"col-md-12\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\" style={{textAlign:\"left\"}}>{testname}</div>\n                    <div class=\"panel-body\">\n                        <form style={{textAlign:\"left\",paddingLeft:15}}>\n                            <label >{testquest.questionText}</label>\n                            {optionlist}\n                        </form>\n                    </div>\n                      \n                    {curnum == limit-1 ? \n                    <div class=\"panel-footer\" style={{textAlign:\"right\"}}> \n                    <a style={{marginRight:960}} onClick={()=>prevquest()} class=\"btn btn-success\">Previous</a>\n                    <a onClick={()=>finish()} class=\"btn btn-danger\">Finish</a>\n                    </div>\n                    :curnum == 0 ? \n                     <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                     <a onClick={()=>nextquest()} class=\"btn btn-success\">Next</a>\n                     </div>\n                     :\n                      <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                      <a onClick={()=>prevquest()} class=\"btn btn-success\">Previous</a>\n                      <a onClick={()=>nextquest()} class=\"btn btn-success\" style={{marginLeft:15}}>Next</a>\n                      </div>                     \n                     }\n\n            </div>\n        </div>\n    </div>\n    </div>\n  );\n }\nelse{\n  return(\n    <div class=\"container\">\n        <div class=\"row\">\n        <h1>My Interview Portal</h1>\n            <hr/>\n            <div class=\"col-md-12\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\" style={{textAlign:\"left\"}}>{testname}</div>\n                    <div class=\"panel-body\">\n                        <form style={{textAlign:\"left\",paddingLeft:15}}>\n                        <label><b>{testquest.questionText}</b></label>\n                                <div>\n                                {optionlist}\n                                </div>\n                        </form>\n                    </div>\n          \n                    {curnum == limit-1 ? \n                    <div class=\"panel-footer\" style={{textAlign:\"right\"}}> \n                    <a onClick={()=>prevquest()} style={{marginRight:960}} class=\"btn btn-success\">Previous</a>\n                    <a onClick={()=>finish()} class=\"btn btn-danger\">Finish</a>\n                    </div>\n                    :curnum == 0 ? \n                     <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                     <a onClick={()=>nextquest()} class=\"btn btn-success\">Next</a>\n                     </div>\n                     :\n                      <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                      <a onClick={()=>prevquest()} class=\"btn btn-success\">Previous</a>\n                      <a onClick={()=>nextquest()} class=\"btn btn-success\" style={{marginLeft:15}}>Next</a>\n                      </div>                     \n                     }\n\n              </div>\n        </div>\n    </div>\n    </div>\n  );\n}\n\n}\n\nexport default Test5;\n","/home/am-pc-32/Documents/interview/src/components/Test5.js",["197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230"],"import React,{useState,useEffect} from \"react\";\nimport { useNavigate,useParams } from \"react-router-dom\";\n\n\nfunction Test5(){\n\n    let axlist = []\n    let testarr = []\n    let currtest = localStorage.getItem(\"test\");\n    testarr = JSON.parse(currtest);\n    console.log(testarr)\n    axlist = testarr.json\n\n\n  let history = useNavigate();\n    var ansoptn = \"\"\n    var multioptn = []\n\n    let {id} = useParams();\n    let {num} = useParams();\n\n    let curnum\n    let testindx\n    let optionlist\n\n    console.log(id);\n    console.log(num);\n    \n    let testquest = []\n    let testname\n    let options = []\n    let type = \"Multiple-Response\"\n    let limit\n\n\n//-----------------Intial loop for retriving question and options from URL-----------------//\n  for(let i=0;i<axlist.length;i++)\n  {\n   if(axlist[i]._id == id)\n   {\n    testindx = i\n    testname =axlist[i].name\n    limit = axlist[i].questions.length\n    for(let j=0;j<limit;j++)\n    {\n      if(axlist[i].questions[j]._id == num)\n      {\n        curnum = j\n        if(curnum <= testarr.corctans.length-1)\n        {\n          testarr.corctans.splice(curnum,1)\n        //   testarr.ans.splice(curnum,1)\n          localStorage.setItem(\"test\", JSON.stringify(testarr))\n        }\n      }\n    }\n    testquest = axlist[i].questions[curnum]\n    options = testquest.options\n    if(testquest.type == type)\n    {\n      type = \"Multiple-Response\"\n    }\n    else{\n        type = \"Single\" \n    }\n    console.log(type)\n   }\n  }\n\n\n\n\n//-----------------------previous button---------------------//\n  let prevquest = () => {\n    multioptn = []\n    let prevpage = axlist[testindx].questions[curnum-1]._id\n    history(\"/test/\"+id+\"/\"+prevpage);\n  }\n\n\n\n\n//-----------------------next button---------------------//\n let nextquest = () => {\n  \n  let nextpage = axlist[testindx].questions[curnum+1]._id\n  console.log(ansoptn)\n  console.log(multioptn)\n  console.log(axlist[testindx].questions[curnum].correctOptionIndex)\n  \n  if(axlist[testindx].questions[curnum].type == \"Multiple-Response\")\n  {\n    let counter = 0\n    if(axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length)\n  {\n    for(let i=0;i<axlist[testindx].questions[curnum].correctOptionIndex.length;i++)\n    {\n      for(let j=0;j<multioptn.length;j++)\n      {\n        if(axlist[testindx].questions[curnum].correctOptionIndex[i] == parseInt(multioptn[j]))\n        {\n         counter++\n        }\n      }\n    }\n    console.log(counter)\n    if(counter == multioptn.length)\n    {\n      testarr.ans[curnum]=multioptn\n      testarr.corctans.push(\"correct\")\n      multioptn = []\n    }\n    else{\n      testarr.ans[curnum]=multioptn\n      testarr.corctans.push(\"wrong\")\n      multioptn = []\n    }\n  }\n  else{\n    testarr.ans[curnum]=multioptn\n    testarr.corctans.push(\"wrong\")\n    multioptn = []\n  }\n}\n  else\n  {\n   if(axlist[testindx].questions[curnum].correctOptionIndex == ansoptn)\n   {\n    testarr.ans[curnum]=ansoptn\n    testarr.corctans.push(\"correct\")\n   }\n   else{\n    testarr.ans[curnum]=ansoptn\n    testarr.corctans.push(\"wrong\")\n   }\n  }\n  localStorage.setItem(\"test\", JSON.stringify(testarr))\n  history(\"/test/\"+id+\"/\"+nextpage);\n}\n\n\n\n\n//-----------------------finsish button---------------------//\n let finish = () => {\n  if(axlist[testindx].questions[curnum].type == \"Multiple-Response\")\n  {\n    let counter = 0\n    if(axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length)\n  {\n    for(let i=0;i<axlist[testindx].questions[curnum].correctOptionIndex.length;i++)\n    {\n      for(let j=0;j<multioptn.length;j++)\n      {\n        if(axlist[testindx].questions[curnum].correctOptionIndex[i] == parseInt(multioptn[j]))\n        {\n         counter++\n        }\n      }\n    }\n    console.log(counter)\n    if(counter == multioptn.length)\n    {\n        testarr.ans[curnum]=multioptn\n        testarr.corctans.push(\"correct\")\n        multioptn = []\n    }\n    else{\n        testarr.ans[curnum]=multioptn\n        testarr.corctans.push(\"wrong\")\n        multioptn = []\n    }\n  }\n  else{\n    testarr.ans[curnum]=multioptn\n    testarr.corctans.push(\"wrong\")\n    multioptn = []\n}\n  }\n  else\n  {\n  if(axlist[testindx].questions[curnum].correctOptionIndex == ansoptn)\n  {\n    testarr.ans[curnum]=ansoptn\n   testarr.corctans.push(\"correct\")\n  }\n  else{\n    testarr.ans[curnum]=ansoptn\n    testarr.corctans.push(\"wrong\")\n  }\n }\n  localStorage.setItem(\"test\", JSON.stringify(testarr))\n  history(\"/finish\")\n }\n\n\n\n\n\n//----------------------handle radio changes----------------------//\n let handleRadio = event =>{\n  ansoptn=event.target.value\n  event.target.checked=true\n  console.log(ansoptn)\n}\n\n\n \n\n//----------------------handle checkbox changes----------------------//\n let handleCheck = event =>{\n   let temparr = multioptn\n   if(temparr.includes(event.target.value)==true)\n   {\n    let indx = temparr.indexOf(event.target.value)\n    temparr.splice(indx, 1)\n   }\n   else{\n    temparr.push(event.target.value)\n   }\n   multioptn = temparr\n }\n\n\n\n\n//----------------setting options before display-----------------//\n if(type == \"Single\"){\n    \n    let ansarr = []\n    let temparr = []\n    let temp = localStorage.getItem(\"test\");\n    temparr = JSON.parse(temp);\n    ansarr = temparr.ans\n     console.log(ansarr[curnum])\n     console.log(curnum)\n   \n    if(typeof ansarr[curnum] == \"undefined\")\n    {\n   optionlist = options.map((optn,index) =>\n   <div>\n  <input  id={index} onClick={handleRadio} type=\"radio\" name={\"option\"+num} value={index}/><label for={index}>{optn}</label>\n  </div>);\n  }\n    else{\n        ansoptn = ansarr[curnum]\n      optionlist = options.map((optn,index) =>\n      (ansarr[curnum] == index.toString())\n      ?\n    <><div>\n     <input  id={index} checked={true} onClick={handleRadio} type=\"radio\" name={\"option\"+num} value={index}/><label for={index}>{optn}</label>\n     </div></>\n     :<><div>\n     <input  id={index} onClick={handleRadio} type=\"radio\" name={\"option\"+num} value={index}/><label for={index}>{optn}</label>\n     </div></>\n   );\n    }\n  }\n else{\n    let ansarr = []\n    let temparr = []\n    let temp = localStorage.getItem(\"test\");\n    temparr = JSON.parse(temp);\n    ansarr = temparr.ans\n    \n    if(typeof ansarr[curnum] == \"undefined\")\n    {\n        optionlist = options.map((optn,index) =>\n        <div class=\"checkbox\">\n        <input onClick={handleCheck} type=\"checkbox\" name={\"option\"+num} value={index}/>\n        <label for={index}>{optn}</label>\n        </div>);\n    }\n  else{\n    multioptn = ansarr[curnum]\n    optionlist = options.map((optn,index) =>\n    (((ansarr[curnum]).includes(index.toString())) == true)\n      ?\n      <><div class=\"checkbox\">\n    <input onClick={handleCheck} checked={true} type=\"checkbox\" name={\"option\"+num} value={index}/>\n    <label for={index}>{optn}</label>\n    </div></>\n    :<><div class=\"checkbox\">\n    <input onClick={handleCheck} type=\"checkbox\" name={\"option\"+num} value={index}/>\n    <label for={index}>{optn}</label>\n    </div></>\n    );\n   }\n }\n\n\n\n\n\n//---------------------displaying question & options---------------------//\n if(type == \"Single\")\n {\n  return(\n    <div class=\"container\">\n        <div class=\"row\">\n        <h1>My Interview Portal</h1>\n            <hr/>\n            <form>\n            <div class=\"col-md-12\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\" style={{textAlign:\"left\"}}>{testname}</div>\n                    <div class=\"panel-body\">\n                        <form style={{textAlign:\"left\",paddingLeft:15}}>\n                            <label >{testquest.questionText}</label>\n                            {optionlist}\n                        </form>\n                    </div>\n                      \n                    {curnum == limit-1 ? \n                    <div class=\"panel-footer\" style={{textAlign:\"right\"}}> \n                    <a style={{marginRight:960}} onClick={()=>prevquest()} class=\"btn btn-success\">Previous</a>\n                    <a onClick={()=>finish()} class=\"btn btn-danger\">Finish</a>\n                    </div>\n                    :curnum == 0 ? \n                     <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                     <a onClick={()=>nextquest()} class=\"btn btn-success\">Next</a>\n                     </div>\n                     :\n                      <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                      <a onClick={()=>prevquest()} class=\"btn btn-success\">Previous</a>\n                      <a onClick={()=>nextquest()} class=\"btn btn-success\" style={{marginLeft:15}}>Next</a>\n                      </div>                     \n                     }\n\n            </div>\n        </div></form>\n    </div>\n    </div>\n  );\n }\nelse{\n  return(\n    <div class=\"container\">\n        <div class=\"row\">\n        <h1>My Interview Portal</h1>\n            <hr/>\n            <div class=\"col-md-12\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\" style={{textAlign:\"left\"}}>{testname}</div>\n                    <div class=\"panel-body\">\n                        <form style={{textAlign:\"left\",paddingLeft:15}}>\n                        <label><b>{testquest.questionText}</b></label>\n                                <div>\n                                {optionlist}\n                                </div>\n                        </form>\n                    </div>\n          \n                    {curnum == limit-1 ? \n                    <div class=\"panel-footer\" style={{textAlign:\"right\"}}> \n                    <a onClick={()=>prevquest()} style={{marginRight:960}} class=\"btn btn-success\">Previous</a>\n                    <a onClick={()=>finish()} class=\"btn btn-danger\">Finish</a>\n                    </div>\n                    :curnum == 0 ? \n                     <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                     <a onClick={()=>nextquest()} class=\"btn btn-success\">Next</a>\n                     </div>\n                     :\n                      <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                      <a onClick={()=>prevquest()} class=\"btn btn-success\">Previous</a>\n                      <a onClick={()=>nextquest()} class=\"btn btn-success\" style={{marginLeft:15}}>Next</a>\n                      </div>                     \n                     }\n\n              </div>\n        </div>\n    </div>\n    </div>\n  );\n}\n\n}\n\nexport default Test5;\n","/home/am-pc-32/Documents/interview/src/components/Test6.js",["231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262"],"import React,{useState,useEffect} from \"react\";\nimport { useNavigate,useParams } from \"react-router-dom\";\nimport Compo from \"./Compo\";\n\n\nfunction Test6(){\n\n    let axlist = []\n    let testarr = []\n    let currtest = localStorage.getItem(\"test\");\n    testarr = JSON.parse(currtest);\n    console.log(testarr)\n    axlist = testarr.json\n\n\n  let history = useNavigate();\n    var ansoptn = \"\"\n    var multioptn = []\n\n    let {id} = useParams();\n    let {num} = useParams();\n\n    let curnum\n    let testindx\n    let optionlist\n\n    console.log(id);\n    console.log(num);\n    \n    let testquest = []\n    let testname\n    let options = []\n    let type = \"Multiple-Response\"\n    let limit\n\n\n//-----------------Intial loop for retriving data of current question-----------------//\n  for(let i=0;i<axlist.length;i++)\n  {\n   if(axlist[i]._id == id)\n   {\n    testindx = i\n    testname =axlist[i].name\n    limit = axlist[i].questions.length\n    for(let j=0;j<limit;j++)\n    {\n      if(axlist[i].questions[j]._id == num)\n      {\n        curnum = j\n        if(curnum <= testarr.corctans.length-1)\n        {\n          testarr.corctans.splice(curnum,1)\n        //   testarr.ans.splice(curnum,1)\n          localStorage.setItem(\"test\", JSON.stringify(testarr))\n        }\n      }\n    }\n    testquest = axlist[i].questions[curnum]\n    options = testquest.options\n    if(testquest.type == type)\n    {\n      type = \"Multiple-Response\"\n    }\n    else{\n        type = \"Single\" \n    }\n    console.log(type)\n   }\n  }\n\n\n\n\n//-----------------------previous button---------------------//\n  let prevquest = () => {\n    multioptn = []\n    let prevpage = axlist[testindx].questions[curnum-1]._id\n    history(\"/test/\"+id+\"/\"+prevpage);\n  }\n\n\n\n\n//-----------------------next button---------------------//\n let nextquest = () => {\n  let nextpage = axlist[testindx].questions[curnum+1]._id\n  console.log(ansoptn)\n  console.log(multioptn)\n  console.log(axlist[testindx].questions[curnum].correctOptionIndex)\n  \n  if(axlist[testindx].questions[curnum].type == \"Multiple-Response\")\n  {\n    let counter = 0\n    if(axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length)\n  {\n    for(let i=0;i<axlist[testindx].questions[curnum].correctOptionIndex.length;i++)\n    {\n      for(let j=0;j<multioptn.length;j++)\n      {\n        if(axlist[testindx].questions[curnum].correctOptionIndex[i] == parseInt(multioptn[j]))\n        {\n         counter++\n        }\n      }\n    }\n    console.log(counter)\n    if(counter == multioptn.length)\n    {\n      testarr.ans[curnum]=multioptn\n      testarr.corctans.push(\"correct\")\n      multioptn = []\n    }\n    else{\n      testarr.ans[curnum]=multioptn\n      testarr.corctans.push(\"wrong\")\n      multioptn = []\n    }\n  }\n  else{\n    testarr.ans[curnum]=multioptn\n    testarr.corctans.push(\"wrong\")\n    multioptn = []\n  }\n}\n  else\n  {\n   if(axlist[testindx].questions[curnum].correctOptionIndex == ansoptn)\n   {\n    testarr.ans[curnum]=ansoptn\n    testarr.corctans.push(\"correct\")\n   }\n   else{\n    testarr.ans[curnum]=ansoptn\n    testarr.corctans.push(\"wrong\")\n   }\n  }\n  localStorage.setItem(\"test\", JSON.stringify(testarr))\n  history(\"/test/\"+id+\"/\"+nextpage);\n}\n\n\n\n\n//-----------------------finsish button---------------------//\n let finish = () => {\n  if(axlist[testindx].questions[curnum].type == \"Multiple-Response\")\n  {\n    let counter = 0\n    if(axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length)\n  {\n    for(let i=0;i<axlist[testindx].questions[curnum].correctOptionIndex.length;i++)\n    {\n      for(let j=0;j<multioptn.length;j++)\n      {\n        if(axlist[testindx].questions[curnum].correctOptionIndex[i] == parseInt(multioptn[j]))\n        {\n         counter++\n        }\n      }\n    }\n    console.log(counter)\n    if(counter == multioptn.length)\n    {\n        testarr.ans[curnum]=multioptn\n        testarr.corctans.push(\"correct\")\n        multioptn = []\n    }\n    else{\n        testarr.ans[curnum]=multioptn\n        testarr.corctans.push(\"wrong\")\n        multioptn = []\n    }\n  }\n  else{\n    testarr.ans[curnum]=multioptn\n    testarr.corctans.push(\"wrong\")\n    multioptn = []\n}\n  }\n  else\n  {\n  if(axlist[testindx].questions[curnum].correctOptionIndex == ansoptn)\n  {\n    testarr.ans[curnum]=ansoptn\n   testarr.corctans.push(\"correct\")\n  }\n  else{\n    testarr.ans[curnum]=ansoptn\n    testarr.corctans.push(\"wrong\")\n  }\n }\n  localStorage.setItem(\"test\", JSON.stringify(testarr))\n  history(\"/finish\")\n }\n\n\n\n\n\n//----------------------handle radio changes----------------------//\n let handleRadio = event =>{\n  ansoptn=event.target.value\n  console.log(ansoptn)\n }\n\n\n \n\n//----------------------handle checkbox changes----------------------//\n let handleCheck = event =>{\n   let temparr = multioptn\n   if(temparr.includes(event.target.value)==true)\n   {\n    let indx = temparr.indexOf(event.target.value)\n    temparr.splice(indx, 1)\n   }\n   else{\n    temparr.push(event.target.value)\n   }\n   multioptn = temparr\n }\n \n\n\n\n\n\n//---------------------displaying question & options---------------------//\n if(type == \"Single\")\n {\n  return(\n    <div class=\"container\">\n        <div class=\"row\">\n        <h1>My Interview Portal</h1>\n            <hr/>\n            <div class=\"col-md-12\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\" style={{textAlign:\"left\"}}>{testname}</div>\n                    <div class=\"panel-body\">\n                        <form style={{textAlign:\"left\",paddingLeft:15}}>\n                            <label >{testquest.questionText}</label>\n\n                            <Compo type={type} options={options} curnum={curnum} handleRadio={handleRadio} handleCheck={handleCheck} id={id} num={num}/>\n                            \n                        </form>\n                    </div>\n                      \n                    {curnum == limit-1 ? \n                    <div class=\"panel-footer\" style={{textAlign:\"right\"}}> \n                    <a style={{marginRight:960}} onClick={()=>prevquest()} class=\"btn btn-success\">Previous</a>\n                    <a onClick={()=>finish()} class=\"btn btn-danger\">Finish</a>\n                    </div>\n                    :curnum == 0 ? \n                     <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                     <a onClick={()=>nextquest()} class=\"btn btn-success\">Next</a>\n                     </div>\n                     :\n                      <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                      <a onClick={()=>prevquest()} class=\"btn btn-success\">Previous</a>\n                      <a onClick={()=>nextquest()} class=\"btn btn-success\" style={{marginLeft:15}}>Next</a>\n                      </div>                     \n                     }\n\n            </div>\n        </div>\n    </div>\n    </div>\n  );\n }\nelse{\n  return(\n    <div class=\"container\">\n        <div class=\"row\">\n        <h1>My Interview Portal</h1>\n            <hr/>\n            <div class=\"col-md-12\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\" style={{textAlign:\"left\"}}>{testname}</div>\n                    <div class=\"panel-body\">\n                        <form style={{textAlign:\"left\",paddingLeft:15}}>\n                        <label><b>{testquest.questionText}</b></label>\n                                <div>\n\n                                <Compo type={type} options={options} curnum={curnum} handleRadio={handleRadio} handleCheck={handleCheck} id={id} num={num}/>\n                                \n                                </div>\n                        </form>\n                    </div>\n          \n                    {curnum == limit-1 ? \n                    <div class=\"panel-footer\" style={{textAlign:\"right\"}}> \n                    <a onClick={()=>prevquest()} style={{marginRight:960}} class=\"btn btn-success\">Previous</a>\n                    <a onClick={()=>finish()} class=\"btn btn-danger\">Finish</a>\n                    </div>\n                    :curnum == 0 ? \n                     <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                     <a onClick={()=>nextquest()} class=\"btn btn-success\">Next</a>\n                     </div>\n                     :\n                      <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                      <a onClick={()=>prevquest()} class=\"btn btn-success\">Previous</a>\n                      <a onClick={()=>nextquest()} class=\"btn btn-success\" style={{marginLeft:15}}>Next</a>\n                      </div>                     \n                     }\n\n              </div>\n        </div>\n    </div>\n    </div>\n  );\n}\n\n}\n\nexport default Test6;\n","/home/am-pc-32/Documents/interview/src/components/Compo.js",["263","264","265","266","267","268","269","270"],"import React from 'react'\nimport Test6 from './Test6'\nimport { useNavigate,useParams } from \"react-router-dom\";\n\n function Compo(props) {\n\n    let history = useNavigate();\n    let optionlist\n    let type = props.type\n    let handleRadio = props.handleRadio\n    let options = props.options\n    let curnum = props.curnum\n    let handleCheck = props.handleCheck\n    let id = props.id\n    let num = props.num\n\n    if(type == \"Single\"){\n    \n        let ansarr = []\n        let temparr = []\n        let temp = localStorage.getItem(\"test\");\n        temparr = JSON.parse(temp);\n        ansarr = temparr.ans\n         console.log(ansarr[curnum])\n         console.log(curnum)\n       \n        if(typeof ansarr[curnum] == \"undefined\")\n        {\n        optionlist = options.map((optn,index) =>\n       <div>\n      <input  id={index} onClick={handleRadio} type=\"radio\" name=\"option\" value={index}/><label for={index}>{optn}</label>\n      </div>);\n      }\n        else{\n            // ansoptn = ansarr[curnum]\n          optionlist = options.map((optn,index) =>\n          (ansarr[curnum] == index.toString())\n          ?\n        <><div>\n         <input  id={index} checked={true} onClick={handleRadio} type=\"radio\" name=\"option\" value={index}/><label for={index}>{optn}</label>\n         </div></>\n         :<><div>\n         <input  id={index} onClick={handleRadio} type=\"radio\" name=\"option\" value={index}/><label for={index}>{optn}</label>\n         </div></>\n       );\n        }\n      }\n     else{\n        let ansarr = []\n        let temparr = []\n        let temp = localStorage.getItem(\"test\");\n        temparr = JSON.parse(temp);\n        ansarr = temparr.ans\n        \n        if(typeof ansarr[curnum] == \"undefined\")\n        {\n            optionlist = options.map((optn,index) =>\n            <div class=\"checkbox\">\n            <input onClick={handleCheck} type=\"checkbox\" name={index} value={index}/>\n            <label for={index}>{optn}</label>\n            </div>);\n        }\n      else{\n        // multioptn = ansarr[curnum]\n        optionlist = options.map((optn,index) =>\n        (((ansarr[curnum]).includes(index.toString())) == true)\n          ?\n          <><div class=\"checkbox\">\n        <input onClick={handleCheck} checked=\"true\" type=\"checkbox\" name={index} value={index}/>\n        <label for={index}>{optn}</label>\n        </div></>\n        :<><div class=\"checkbox\">\n        <input onClick={handleCheck} type=\"checkbox\" name={index} value={index}/>\n        <label for={index}>{optn}</label>\n        </div></>\n        );\n       }\n     }\n \n\n    \n    return (\n        <div>\n            {optionlist}\n        </div>\n    )\n}\n\nexport default Compo;","/home/am-pc-32/Documents/interview/src/components/Test7.js",["271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306"],"/home/am-pc-32/Documents/interview/src/components/Test8.js",["307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340"],"import React,{useState,useEffect} from \"react\";\nimport { useNavigate,useParams } from \"react-router-dom\";\n\n\nfunction Test8(){\n\n    let axlist = []\n    let testarr = []\n    let currtest = localStorage.getItem(\"test\");\n    testarr = JSON.parse(currtest);\n    console.log(testarr)\n    axlist = testarr.json\n\n\n  let history = useNavigate();\n\n    var ansoptn = null\n    var multioptn = []\n\n    let {id} = useParams();\n    let {num} = useParams();\n\n    let curnum\n    let testindx\n\n    console.log(id);\n    console.log(num);\n    \n    let testquest = []\n    let testname\n    let options = []\n    let type = \"Multiple-Response\"\n    let limit\n\n\n//-----------------Intial loop for retriving question and options from URL-----------------//\n  for(let i=0;i<axlist.length;i++)\n  {\n   if(axlist[i]._id == id)\n   {\n    testindx = i\n    testname =axlist[i].name\n    limit = axlist[i].questions.length\n    for(let j=0;j<limit;j++)\n    {\n      if(axlist[i].questions[j]._id == num)\n      {\n        curnum = j\n        if(curnum <= testarr.corctans.length-1)\n        {\n          testarr.corctans.splice(curnum,1)\n        //   testarr.ans.splice(curnum,1)\n          localStorage.setItem(\"test\", JSON.stringify(testarr))\n        }\n      }\n    }\n    testquest = axlist[i].questions[curnum]\n    options = testquest.options\n    if(testquest.type == type)\n    {\n      type = \"Multiple-Response\"\n    }\n    else{\n        type = \"Single\" \n    }\n    console.log(type)\n   }\n  }\n\n\n\n\n  let ansarr = []\n  let temparr = []\n  let temp = localStorage.getItem(\"test\");\n  temparr = JSON.parse(temp);\n  ansarr = temparr.ans\n\n  if(type == \"Single\")\n  {\n  if(typeof ansarr[curnum] == \"undefined\")\n  {\n    ansoptn = null\n  }\n  else{\n    ansoptn = ansarr[curnum]\n  }\n} else{\n  if(typeof ansarr[curnum] == \"undefined\")\n  {\n    multioptn = []\n  }\n  else{\n    multioptn = ansarr[curnum]\n  }\n}\n\n\n\n//-----------------------previous button---------------------//\n  let prevquest = () => {\n    multioptn = []\n    let prevpage = axlist[testindx].questions[curnum-1]._id\n    history(\"/test/\"+id+\"/\"+prevpage);\n    window.location.reload(false)\n  }\n\n\n\n\n//-----------------------next button---------------------//\n let nextquest = () => {\n  \n  let nextpage = axlist[testindx].questions[curnum+1]._id\n  console.log(ansoptn)\n  console.log(multioptn)\n  console.log(axlist[testindx].questions[curnum].correctOptionIndex)\n  \n  if(axlist[testindx].questions[curnum].type == \"Multiple-Response\")\n  {\n    let counter = 0\n    if(axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length)\n  {\n    for(let i=0;i<axlist[testindx].questions[curnum].correctOptionIndex.length;i++)\n    {\n      for(let j=0;j<multioptn.length;j++)\n      {\n        if(axlist[testindx].questions[curnum].correctOptionIndex[i] == parseInt(multioptn[j]))\n        {\n         counter++\n        }\n      }\n    }\n    console.log(counter)\n    if(counter == multioptn.length)\n    {\n      testarr.ans[curnum]=multioptn\n      testarr.corctans.push(\"correct\")\n      multioptn = []\n    }\n    else{\n      testarr.ans[curnum]=multioptn\n      testarr.corctans.push(\"wrong\")\n      multioptn = []\n    }\n  }\n  else{\n    testarr.ans[curnum]=multioptn\n    testarr.corctans.push(\"wrong\")\n    multioptn = []\n  }\n}\n  else\n  {\n    console.log(ansoptn)\n    console.log(axlist[testindx].questions[curnum].correctOptionIndex)\n\n   if(axlist[testindx].questions[curnum].correctOptionIndex == ansoptn)\n   {\n    testarr.ans[curnum]=ansoptn\n    testarr.corctans.push(\"correct\")\n   }\n   else{\n    testarr.ans[curnum]=ansoptn\n    testarr.corctans.push(\"wrong\")\n   }\n  }\n  localStorage.setItem(\"test\", JSON.stringify(testarr))\n  history(\"/test/\"+id+\"/\"+nextpage);\n  window.location.reload(false)\n}\n\n\n\n\n//-----------------------finsish button---------------------//\n let finish = () => {\n  if(axlist[testindx].questions[curnum].type == \"Multiple-Response\")\n  {\n    let counter = 0\n    if(axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length)\n  {\n    for(let i=0;i<axlist[testindx].questions[curnum].correctOptionIndex.length;i++)\n    {\n      for(let j=0;j<multioptn.length;j++)\n      {\n        if(axlist[testindx].questions[curnum].correctOptionIndex[i] == parseInt(multioptn[j]))\n        {\n         counter++\n        }\n      }\n    }\n    console.log(counter)\n    if(counter == multioptn.length)\n    {\n        testarr.ans[curnum]=multioptn\n        testarr.corctans.push(\"correct\")\n        multioptn = []\n    }\n    else{\n        testarr.ans[curnum]=multioptn\n        testarr.corctans.push(\"wrong\")\n        multioptn = []\n    }\n  }\n  else{\n    testarr.ans[curnum]=multioptn\n    testarr.corctans.push(\"wrong\")\n    multioptn = []\n}\n  }\n  else\n  {\n  if(axlist[testindx].questions[curnum].correctOptionIndex == ansoptn)\n  {\n    testarr.ans[curnum]=ansoptn\n   testarr.corctans.push(\"correct\")\n  }\n  else{\n    testarr.ans[curnum]=ansoptn\n    testarr.corctans.push(\"wrong\")\n  }\n }\n  localStorage.setItem(\"test\", JSON.stringify(testarr))\n  history(\"/finish\")\n }\n\n\n\n\n\n//----------------------handle radio changes----------------------//\n let handleRadio = event =>{\n  ansoptn=event.target.value\n  event.target.checked=true\n  console.log(ansoptn)\n}\n\n\n \n\n//----------------------handle checkbox changes----------------------//\n let handleCheck = event =>{\n   let temparr = multioptn\n   if(temparr.includes(event.target.value)==true)\n   {\n    let indx = temparr.indexOf(event.target.value)\n    temparr.splice(indx, 1)\n   }\n   else{\n    temparr.push(event.target.value)\n   }\n   multioptn = temparr\n }\n\n\n\n\n//---------------------displaying question & options---------------------//\n if(type == \"Single\")\n {\n    let ansarr = []\n    let temparr = []\n    let temp = localStorage.getItem(\"test\");\n    temparr = JSON.parse(temp);\n    ansarr = temparr.ans\n    console.log(ansarr[curnum])\n    console.log(curnum)\n   \n  return(\n    <div class=\"container\">\n        <div class=\"row\">\n        <h1>My Interview Portal</h1>\n            <hr/>\n            <form>\n            <div class=\"col-md-12\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\" style={{textAlign:\"left\"}}>{testname}</div>\n                    <div class=\"panel-body\">\n                        <form style={{textAlign:\"left\",paddingLeft:15}}>\n                            <label >{testquest.questionText}</label>\n\n                            {/* ---------------------setting optins--------------------- */}\n                            {\n                             (typeof ansarr[curnum] == \"undefined\")\n                             ?<>\n                               {options.map((optn,index) =>(\n                              <div>\n                              <input  id={index} onClick={handleRadio} type=\"radio\" name={\"option\"+num} value={index}/><label>{optn}</label>\n                              </div>\n                              ))}</>\n                             :<>\n                              {options.map((optn,index) => (\n                               (ansarr[curnum] == index.toString())\n                               ?\n                                <div>\n                                <input  id={index} defaultChecked={true} onClick={handleRadio} type=\"radio\" name={\"option\"+num} value={index}/><label>{optn}</label>\n                                </div>\n                               :<div>\n                                <input  id={index} onClick={handleRadio} type=\"radio\" name={\"option\"+num} value={index}/><label>{optn}</label>\n                                </div>\n                               ))}</>}\n                            \n                        </form>\n                    </div>\n                      \n                    {curnum == limit-1 ? \n                    <div class=\"panel-footer\" style={{textAlign:\"right\"}}> \n                    <a style={{marginRight:960}} onClick={()=>prevquest()} class=\"btn btn-success\">Previous</a>\n                    <a onClick={()=>finish()} class=\"btn btn-danger\">Finish</a>\n                    </div>\n                    :curnum == 0 ? \n                     <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                     <a onClick={()=>nextquest()} class=\"btn btn-success\">Next</a>\n                     </div>\n                     :\n                      <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                      <a onClick={()=>prevquest()} class=\"btn btn-success\">Previous</a>\n                      <a onClick={()=>nextquest()} class=\"btn btn-success\" style={{marginLeft:15}}>Next</a>\n                      </div>                     \n                     }\n\n            </div>\n        </div></form>\n    </div>\n    </div>\n  );\n }\nelse{\n    let ansarr = []\n    let temparr = []\n    let temp = localStorage.getItem(\"test\");\n    temparr = JSON.parse(temp);\n    ansarr = temparr.ans\n\n  return(\n    <div class=\"container\">\n        <div class=\"row\">\n        <h1>My Interview Portal</h1>\n            <hr/>\n            <div class=\"col-md-12\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\" style={{textAlign:\"left\"}}>{testname}</div>\n                    <div class=\"panel-body\">\n                        <form style={{textAlign:\"left\",paddingLeft:15}}>\n                        <label><b>{testquest.questionText}</b></label>\n                                <div>\n                                \n                             {/* ---------------------setting optins--------------------- */}\n\n                              {\n                                (typeof ansarr[curnum] == \"undefined\")\n                                ?<>\n                                 { options.map((optn,index) =>(\n                                <div>\n                                <input onClick={handleCheck} type=\"checkbox\" name={\"option\"+num} value={index}/>\n                                <label for={index}>{optn}</label>\n                                </div>))}\n                                </>\n                                :<>\n                                 { options.map((optn,index) =>(\n                                  (((ansarr[curnum]).includes(index.toString())) == true)\n                                    ?<>\n                                     <div>\n                                     <input onClick={handleCheck} defaultChecked={true} type=\"checkbox\" name={\"option\"+num} value={index}/>\n                                     <label for={index}>{optn}</label>\n                                     </div></>\n                                    :<><div>\n                                     <input onClick={handleCheck} type=\"checkbox\" name={\"option\"+num} value={index}/>\n                                     <label for={index}>{optn}</label>\n                                     </div></>\n                                   ))\n                                  }</>\n                               }\n\n                                </div>\n                        </form>\n                    </div>\n          \n                    {curnum == limit-1 ? \n                    <div class=\"panel-footer\" style={{textAlign:\"right\"}}> \n                    <a onClick={()=>prevquest()} style={{marginRight:960}} class=\"btn btn-success\">Previous</a>\n                    <a onClick={()=>finish()} class=\"btn btn-danger\">Finish</a>\n                    </div>\n                    :curnum == 0 ? \n                     <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                     <a onClick={()=>nextquest()} class=\"btn btn-success\">Next</a>\n                     </div>\n                     :\n                      <div class=\"panel-footer\" style={{textAlign:\"left\"}}> \n                      <a onClick={()=>prevquest()} class=\"btn btn-success\">Previous</a>\n                      <a onClick={()=>nextquest()} class=\"btn btn-success\" style={{marginLeft:15}}>Next</a>\n                      </div>                     \n                     }\n\n              </div>\n        </div>\n    </div>\n    </div>\n  );\n}\n\n}\n\nexport default Test8;\n","/home/am-pc-32/Documents/interview/src/components/Test9.js",["341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374"],"import React,{useState,useEffect} from \"react\";\nimport { useNavigate,useParams } from \"react-router-dom\";\n\n\nfunction Test9(){\n\n    let axlist = []\n    let testarr = []\n    let currtest = localStorage.getItem(\"test\");\n    testarr = JSON.parse(currtest);\n    console.log(testarr)\n    axlist = testarr.json\n\n\n  let history = useNavigate();\n\n    var ansoptn = null\n    var multioptn = []\n\n    let {id} = useParams();\n    let {num} = useParams();\n\n    let curnum\n    let testindx\n    let optionlist\n\n    console.log(id);\n    console.log(num);\n    \n    let testquest = []\n    let testname\n    let options = []\n    let type = \"Multiple-Response\"\n    let limit\n\n\n//-----------------Intial loop for retriving question and options from URL-----------------//\n  for(let i=0;i<axlist.length;i++)\n  {\n   if(axlist[i]._id == id)\n   {\n    testindx = i\n    testname =axlist[i].name\n    limit = axlist[i].questions.length\n    for(let j=0;j<limit;j++)\n    {\n      if(axlist[i].questions[j]._id == num)\n      {\n        curnum = j\n        if(curnum <= testarr.corctans.length-1)\n        {\n          testarr.corctans.splice(curnum,1)\n          localStorage.setItem(\"test\", JSON.stringify(testarr))\n        }\n      }\n    }\n    testquest = axlist[i].questions[curnum]\n    options = testquest.options\n    if(testquest.type == type)\n    {\n      type = \"Multiple-Response\"\n    }\n    else{\n        type = \"Single\" \n    }\n    console.log(type)\n   }\n  }\n\n\n\n//-----------------------previous button---------------------//\n  let prevquest = () => {\n    multioptn = []\n    let prevpage = axlist[testindx].questions[curnum-1]._id\n    history(\"/test/\"+id+\"/\"+prevpage);\n    window.location.reload(false)\n  }\n\n\n\n\n//-----------------------next button---------------------//\n let nextquest = () => {\n  \n  let nextpage = axlist[testindx].questions[curnum+1]._id\n  console.log(ansoptn)\n  console.log(multioptn)\n  console.log(axlist[testindx].questions[curnum].correctOptionIndex)\n  \n  if(axlist[testindx].questions[curnum].type == \"Multiple-Response\")\n  {\n    let counter = 0\n    if(axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length)\n  {\n    for(let i=0;i<axlist[testindx].questions[curnum].correctOptionIndex.length;i++)\n    {\n      for(let j=0;j<multioptn.length;j++)\n      {\n        if(axlist[testindx].questions[curnum].correctOptionIndex[i] == parseInt(multioptn[j]))\n        {\n         counter++\n        }\n      }\n    }\n    console.log(counter)\n    if(counter == multioptn.length)\n    {\n      testarr.ans[curnum]=multioptn\n      testarr.corctans.push(\"correct\")\n      multioptn = []\n    }\n    else{\n      testarr.ans[curnum]=multioptn\n      testarr.corctans.push(\"wrong\")\n      multioptn = []\n    }\n  }\n  else{\n    testarr.ans[curnum]=multioptn\n    testarr.corctans.push(\"wrong\")\n    multioptn = []\n  }\n}\n  else\n  {\n    console.log(ansoptn)\n    console.log(axlist[testindx].questions[curnum].correctOptionIndex)\n\n   if(axlist[testindx].questions[curnum].correctOptionIndex == ansoptn)\n   {\n    testarr.ans[curnum]=ansoptn\n    testarr.corctans.push(\"correct\")\n   }\n   else{\n    testarr.ans[curnum]=ansoptn\n    testarr.corctans.push(\"wrong\")\n   }\n  }\n  localStorage.setItem(\"test\", JSON.stringify(testarr))\n  history(\"/test/\"+id+\"/\"+nextpage);\n  window.location.reload(false)\n}\n\n\n\n\n//-----------------------finish button---------------------//\n let finish = () => {\n  if(axlist[testindx].questions[curnum].type == \"Multiple-Response\")\n  {\n    let counter = 0\n    if(axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length)\n  {\n    for(let i=0;i<axlist[testindx].questions[curnum].correctOptionIndex.length;i++)\n    {\n      for(let j=0;j<multioptn.length;j++)\n      {\n        if(axlist[testindx].questions[curnum].correctOptionIndex[i] == parseInt(multioptn[j]))\n        {\n         counter++\n        }\n      }\n    }\n    console.log(counter)\n    if(counter == multioptn.length)\n    {\n        testarr.ans[curnum]=multioptn\n        testarr.corctans.push(\"correct\")\n        multioptn = []\n    }\n    else{\n        testarr.ans[curnum]=multioptn\n        testarr.corctans.push(\"wrong\")\n        multioptn = []\n    }\n  }\n  else{\n    testarr.ans[curnum]=multioptn\n    testarr.corctans.push(\"wrong\")\n    multioptn = []\n}\n  }\n  else\n  {\n  if(axlist[testindx].questions[curnum].correctOptionIndex == ansoptn)\n  {\n    testarr.ans[curnum]=ansoptn\n   testarr.corctans.push(\"correct\")\n  }\n  else{\n    testarr.ans[curnum]=ansoptn\n    testarr.corctans.push(\"wrong\")\n  }\n }\n  localStorage.setItem(\"test\", JSON.stringify(testarr))\n  history(\"/finish\")\n }\n\n\n\n\n\n//----------------------handle radio changes----------------------//\n let handleRadio = event =>{\n  ansoptn=event.target.value\n  event.target.checked=true\n  console.log(ansoptn)\n}\n\n\n \n\n//----------------------handle checkbox changes----------------------//\n let handleCheck = event =>{\n   let temparr = multioptn\n   if(temparr.includes(event.target.value)==true)\n   {\n    let indx = temparr.indexOf(event.target.value)\n    temparr.splice(indx, 1)\n   }\n   else{\n    temparr.push(event.target.value)\n   }\n   multioptn = temparr\n }\n\n\n\n\n//---------------------displaying question & options---------------------//\n if(type == \"Single\")\n {\n    let ansarr = []\n    let temparr = []\n    let temp = localStorage.getItem(\"test\");\n    temparr = JSON.parse(temp);\n    ansarr = temparr.ans\n    console.log(ansarr[curnum])\n    console.log(curnum)\n   \n  return(\n    <div className=\"container\">\n        <div className=\"row\">\n        <h1>My Interview Portal</h1>\n            <hr/>\n            <form>\n            <div className=\"col-md-12\">\n                <div className=\"panel panel-default\">\n                    <div className=\"panel-heading\" style={{textAlign:\"left\"}}>{testname}</div>\n                    <div className=\"panel-body\">\n                        <form style={{textAlign:\"left\",paddingLeft:15}}>\n                            <label >{testquest.questionText}</label>\n\n                            {/* ---------------------setting options of Radio--------------------- */}\n                            {\n                             (typeof ansarr[curnum] == \"undefined\")\n                             ?<>\n                               {options.map((optn,index) =>(\n                              <div key={index}>\n                              <input  id={index} onClick={handleRadio} type=\"radio\" name={\"option\"+num} value={index}/><label>{optn}</label>\n                              </div>\n                              ))}</>\n                             :<>\n                             <div style={{display:\"none\"}}>{ansoptn = ansarr[curnum]}</div>\n                              {options.map((optn,index) => (\n                               (ansarr[curnum] == index.toString())\n                               ?\n                                <div key={index}>\n                                <input  id={index} defaultChecked={true} onClick={handleRadio} type=\"radio\" name={\"option\"+num} value={index}/><label>{optn}</label>\n                                </div>\n                               :<div key={index}>\n                                <input  id={index} onClick={handleRadio} type=\"radio\" name={\"option\"+num} value={index}/><label>{optn}</label>\n                                </div>\n                               ))} </>}\n                            \n                        </form>\n                    </div>\n                      \n                    {curnum == limit-1 ? \n                    <div className=\"panel-footer\" style={{textAlign:\"right\"}}> \n                    <a style={{marginRight:960}} onClick={()=>prevquest()} className=\"btn btn-success\">Previous</a>\n                    <a onClick={()=>finish()} className=\"btn btn-danger\">Finish</a>\n                    </div>\n                    :curnum == 0 ? \n                     <div className=\"panel-footer\" style={{textAlign:\"left\"}}> \n                     <a onClick={()=>nextquest()} className=\"btn btn-success\">Next</a>\n                     </div>\n                     :\n                      <div className=\"panel-footer\" style={{textAlign:\"left\"}}> \n                      <a onClick={()=>prevquest()} className=\"btn btn-success\">Previous</a>\n                      <a onClick={()=>nextquest()} className=\"btn btn-success\" style={{marginLeft:15}}>Next</a>\n                      </div>                     \n                     }\n\n            </div>\n        </div></form>\n    </div>\n    </div>\n  );\n }\nelse{\n    let ansarr = []\n    let temparr = []\n    let temp = localStorage.getItem(\"test\");\n    temparr = JSON.parse(temp);\n    ansarr = temparr.ans\n\n  return(\n    <div className=\"container\">\n        <div className=\"row\">\n        <h1>My Interview Portal</h1>\n            <hr/>\n            <div className=\"col-md-12\">\n                <div className=\"panel panel-default\">\n                    <div className=\"panel-heading\" style={{textAlign:\"left\"}}>{testname}</div>\n                    <div className=\"panel-body\">\n                        <form style={{textAlign:\"left\",paddingLeft:15}}>\n                        <label><b>{testquest.questionText}</b></label>\n                                <div>\n                                \n                             {/* ---------------------setting options of Checkbox--------------------- */}\n\n                              {\n                                (typeof ansarr[curnum] == \"undefined\")\n                                ?<>\n                                 { options.map((optn,index) =>(\n                                <div key={index}>\n                                <input onClick={handleCheck} type=\"checkbox\" name={\"option\"+num} value={index}/>\n                                <label for={index}>{optn}</label>\n                                </div>))}\n                                </>\n                                :<>\n                                <div style={{display:\"none\"}}>{multioptn = ansarr[curnum]}</div>\n                                 { options.map((optn,index) =>(\n                                  (((ansarr[curnum]).includes(index.toString())) == true)\n                                    ?<>\n                                     <div key={index}>\n                                     <input onClick={handleCheck} defaultChecked={true} type=\"checkbox\" name={\"option\"+num} value={index}/>\n                                     <label for={index}>{optn}</label>\n                                     </div></>\n                                    :<><div>\n                                     <input onClick={handleCheck} type=\"checkbox\" name={\"option\"+num} value={index}/>\n                                     <label for={index}>{optn}</label>\n                                     </div></>\n                                   ))\n                                  }</>\n                               }\n\n                                </div>\n                        </form>\n                    </div>\n          \n                    {curnum == limit-1 ? \n                    <div className=\"panel-footer\" style={{textAlign:\"right\"}}> \n                    <a onClick={()=>prevquest()} style={{marginRight:960}} className=\"btn btn-success\">Previous</a>\n                    <a onClick={()=>finish()} className=\"btn btn-danger\">Finish</a>\n                    </div>\n                    :curnum == 0 ? \n                     <div className=\"panel-footer\" style={{textAlign:\"left\"}}> \n                     <a onClick={()=>nextquest()} className=\"btn btn-success\">Next</a>\n                     </div>\n                     :\n                      <div className=\"panel-footer\" style={{textAlign:\"left\"}}> \n                      <a onClick={()=>prevquest()} className=\"btn btn-success\">Previous</a>\n                      <a onClick={()=>nextquest()} className=\"btn btn-success\" style={{marginLeft:15}}>Next</a>\n                      </div>                     \n                     }\n\n              </div>\n        </div>\n    </div>\n    </div>\n  );\n}\n\n}\n\nexport default Test9;\n",{"ruleId":"375","replacedBy":"376"},{"ruleId":"377","replacedBy":"378"},{"ruleId":"379","severity":1,"message":"380","line":5,"column":8,"nodeType":"381","messageId":"382","endLine":5,"endColumn":12},{"ruleId":"379","severity":1,"message":"383","line":6,"column":8,"nodeType":"381","messageId":"382","endLine":6,"endColumn":13},{"ruleId":"379","severity":1,"message":"384","line":7,"column":8,"nodeType":"381","messageId":"382","endLine":7,"endColumn":13},{"ruleId":"379","severity":1,"message":"385","line":8,"column":8,"nodeType":"381","messageId":"382","endLine":8,"endColumn":13},{"ruleId":"379","severity":1,"message":"386","line":9,"column":8,"nodeType":"381","messageId":"382","endLine":9,"endColumn":13},{"ruleId":"379","severity":1,"message":"387","line":10,"column":8,"nodeType":"381","messageId":"382","endLine":10,"endColumn":13},{"ruleId":"379","severity":1,"message":"388","line":12,"column":8,"nodeType":"381","messageId":"382","endLine":12,"endColumn":13},{"ruleId":"379","severity":1,"message":"389","line":13,"column":8,"nodeType":"381","messageId":"382","endLine":13,"endColumn":13},{"ruleId":"390","severity":1,"message":"391","line":20,"column":27,"nodeType":"392","messageId":"393","endLine":20,"endColumn":29},{"ruleId":"394","severity":1,"message":"395","line":52,"column":22,"nodeType":"396","endLine":52,"endColumn":100},{"ruleId":"390","severity":1,"message":"391","line":49,"column":21,"nodeType":"392","messageId":"393","endLine":49,"endColumn":23},{"ruleId":"390","severity":1,"message":"391","line":56,"column":37,"nodeType":"392","messageId":"393","endLine":56,"endColumn":39},{"ruleId":"390","severity":1,"message":"391","line":63,"column":23,"nodeType":"392","messageId":"393","endLine":63,"endColumn":25},{"ruleId":"390","severity":1,"message":"391","line":83,"column":46,"nodeType":"392","messageId":"393","endLine":83,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":85,"column":69,"nodeType":"392","messageId":"393","endLine":85,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":96,"column":13,"nodeType":"392","messageId":"393","endLine":96,"endColumn":15},{"ruleId":"390","severity":1,"message":"391","line":107,"column":61,"nodeType":"392","messageId":"393","endLine":107,"endColumn":63},{"ruleId":"390","severity":1,"message":"391","line":123,"column":46,"nodeType":"392","messageId":"393","endLine":123,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":125,"column":69,"nodeType":"392","messageId":"393","endLine":125,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":136,"column":13,"nodeType":"392","messageId":"393","endLine":136,"endColumn":15},{"ruleId":"390","severity":1,"message":"391","line":147,"column":60,"nodeType":"392","messageId":"393","endLine":147,"endColumn":62},{"ruleId":"390","severity":1,"message":"391","line":168,"column":43,"nodeType":"392","messageId":"393","endLine":168,"endColumn":45},{"ruleId":"390","severity":1,"message":"391","line":181,"column":10,"nodeType":"392","messageId":"393","endLine":181,"endColumn":12},{"ruleId":"390","severity":1,"message":"391","line":200,"column":10,"nodeType":"392","messageId":"393","endLine":200,"endColumn":12},{"ruleId":"390","severity":1,"message":"391","line":217,"column":29,"nodeType":"392","messageId":"393","endLine":217,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":219,"column":21,"nodeType":"396","endLine":219,"endColumn":70},{"ruleId":"394","severity":1,"message":"395","line":223,"column":11,"nodeType":"396","endLine":223,"endColumn":64},{"ruleId":"390","severity":1,"message":"391","line":250,"column":29,"nodeType":"392","messageId":"393","endLine":250,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":252,"column":21,"nodeType":"396","endLine":252,"endColumn":98},{"ruleId":"394","severity":1,"message":"395","line":255,"column":13,"nodeType":"396","endLine":255,"endColumn":67},{"ruleId":"379","severity":1,"message":"397","line":1,"column":24,"nodeType":"381","messageId":"382","endLine":1,"endColumn":33},{"ruleId":"390","severity":1,"message":"391","line":38,"column":21,"nodeType":"392","messageId":"393","endLine":38,"endColumn":23},{"ruleId":"390","severity":1,"message":"391","line":45,"column":37,"nodeType":"392","messageId":"393","endLine":45,"endColumn":39},{"ruleId":"390","severity":1,"message":"391","line":52,"column":23,"nodeType":"392","messageId":"393","endLine":52,"endColumn":25},{"ruleId":"390","severity":1,"message":"391","line":77,"column":46,"nodeType":"392","messageId":"393","endLine":77,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":79,"column":69,"nodeType":"392","messageId":"393","endLine":79,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":90,"column":13,"nodeType":"392","messageId":"393","endLine":90,"endColumn":15},{"ruleId":"390","severity":1,"message":"391","line":104,"column":61,"nodeType":"392","messageId":"393","endLine":104,"endColumn":63},{"ruleId":"390","severity":1,"message":"391","line":120,"column":46,"nodeType":"392","messageId":"393","endLine":120,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":122,"column":69,"nodeType":"392","messageId":"393","endLine":122,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":133,"column":13,"nodeType":"392","messageId":"393","endLine":133,"endColumn":15},{"ruleId":"390","severity":1,"message":"391","line":144,"column":60,"nodeType":"392","messageId":"393","endLine":144,"endColumn":62},{"ruleId":"390","severity":1,"message":"391","line":166,"column":43,"nodeType":"392","messageId":"393","endLine":166,"endColumn":45},{"ruleId":"390","severity":1,"message":"391","line":179,"column":10,"nodeType":"392","messageId":"393","endLine":179,"endColumn":12},{"ruleId":"390","severity":1,"message":"391","line":198,"column":10,"nodeType":"392","messageId":"393","endLine":198,"endColumn":12},{"ruleId":"390","severity":1,"message":"391","line":215,"column":29,"nodeType":"392","messageId":"393","endLine":215,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":217,"column":21,"nodeType":"396","endLine":217,"endColumn":70},{"ruleId":"390","severity":1,"message":"391","line":219,"column":29,"nodeType":"392","messageId":"393","endLine":219,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":221,"column":22,"nodeType":"396","endLine":221,"endColumn":75},{"ruleId":"394","severity":1,"message":"395","line":225,"column":23,"nodeType":"396","endLine":225,"endColumn":76},{"ruleId":"394","severity":1,"message":"395","line":226,"column":23,"nodeType":"396","endLine":226,"endColumn":100},{"ruleId":"390","severity":1,"message":"391","line":253,"column":29,"nodeType":"392","messageId":"393","endLine":253,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":255,"column":21,"nodeType":"396","endLine":255,"endColumn":70},{"ruleId":"390","severity":1,"message":"391","line":257,"column":29,"nodeType":"392","messageId":"393","endLine":257,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":259,"column":22,"nodeType":"396","endLine":259,"endColumn":75},{"ruleId":"394","severity":1,"message":"395","line":263,"column":23,"nodeType":"396","endLine":263,"endColumn":76},{"ruleId":"394","severity":1,"message":"395","line":264,"column":23,"nodeType":"396","endLine":264,"endColumn":100},{"ruleId":"379","severity":1,"message":"397","line":1,"column":24,"nodeType":"381","messageId":"382","endLine":1,"endColumn":33},{"ruleId":"390","severity":1,"message":"391","line":39,"column":21,"nodeType":"392","messageId":"393","endLine":39,"endColumn":23},{"ruleId":"390","severity":1,"message":"391","line":46,"column":37,"nodeType":"392","messageId":"393","endLine":46,"endColumn":39},{"ruleId":"390","severity":1,"message":"391","line":59,"column":23,"nodeType":"392","messageId":"393","endLine":59,"endColumn":25},{"ruleId":"390","severity":1,"message":"391","line":90,"column":46,"nodeType":"392","messageId":"393","endLine":90,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":93,"column":69,"nodeType":"392","messageId":"393","endLine":93,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":99,"column":69,"nodeType":"392","messageId":"393","endLine":99,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":106,"column":16,"nodeType":"392","messageId":"393","endLine":106,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":126,"column":61,"nodeType":"392","messageId":"393","endLine":126,"endColumn":63},{"ruleId":"390","severity":1,"message":"391","line":146,"column":46,"nodeType":"392","messageId":"393","endLine":146,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":149,"column":69,"nodeType":"392","messageId":"393","endLine":149,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":155,"column":69,"nodeType":"392","messageId":"393","endLine":155,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":162,"column":16,"nodeType":"392","messageId":"393","endLine":162,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":182,"column":60,"nodeType":"392","messageId":"393","endLine":182,"endColumn":62},{"ruleId":"390","severity":1,"message":"391","line":211,"column":43,"nodeType":"392","messageId":"393","endLine":211,"endColumn":45},{"ruleId":"390","severity":1,"message":"391","line":227,"column":10,"nodeType":"392","messageId":"393","endLine":227,"endColumn":12},{"ruleId":"390","severity":1,"message":"391","line":248,"column":10,"nodeType":"392","messageId":"393","endLine":248,"endColumn":12},{"ruleId":"390","severity":1,"message":"391","line":265,"column":29,"nodeType":"392","messageId":"393","endLine":265,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":267,"column":21,"nodeType":"396","endLine":267,"endColumn":100},{"ruleId":"394","severity":1,"message":"395","line":268,"column":21,"nodeType":"396","endLine":268,"endColumn":70},{"ruleId":"390","severity":1,"message":"391","line":270,"column":29,"nodeType":"392","messageId":"393","endLine":270,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":272,"column":22,"nodeType":"396","endLine":272,"endColumn":75},{"ruleId":"394","severity":1,"message":"395","line":276,"column":23,"nodeType":"396","endLine":276,"endColumn":76},{"ruleId":"394","severity":1,"message":"395","line":277,"column":23,"nodeType":"396","endLine":277,"endColumn":100},{"ruleId":"390","severity":1,"message":"391","line":305,"column":29,"nodeType":"392","messageId":"393","endLine":305,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":307,"column":21,"nodeType":"396","endLine":307,"endColumn":100},{"ruleId":"394","severity":1,"message":"395","line":308,"column":21,"nodeType":"396","endLine":308,"endColumn":70},{"ruleId":"390","severity":1,"message":"391","line":310,"column":29,"nodeType":"392","messageId":"393","endLine":310,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":312,"column":22,"nodeType":"396","endLine":312,"endColumn":75},{"ruleId":"394","severity":1,"message":"395","line":316,"column":23,"nodeType":"396","endLine":316,"endColumn":76},{"ruleId":"394","severity":1,"message":"395","line":317,"column":23,"nodeType":"396","endLine":317,"endColumn":100},{"ruleId":"379","severity":1,"message":"397","line":1,"column":24,"nodeType":"381","messageId":"382","endLine":1,"endColumn":33},{"ruleId":"390","severity":1,"message":"391","line":39,"column":21,"nodeType":"392","messageId":"393","endLine":39,"endColumn":23},{"ruleId":"390","severity":1,"message":"391","line":46,"column":37,"nodeType":"392","messageId":"393","endLine":46,"endColumn":39},{"ruleId":"390","severity":1,"message":"391","line":59,"column":23,"nodeType":"392","messageId":"393","endLine":59,"endColumn":25},{"ruleId":"390","severity":1,"message":"391","line":90,"column":46,"nodeType":"392","messageId":"393","endLine":90,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":93,"column":69,"nodeType":"392","messageId":"393","endLine":93,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":99,"column":69,"nodeType":"392","messageId":"393","endLine":99,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":106,"column":16,"nodeType":"392","messageId":"393","endLine":106,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":126,"column":61,"nodeType":"392","messageId":"393","endLine":126,"endColumn":63},{"ruleId":"390","severity":1,"message":"391","line":145,"column":46,"nodeType":"392","messageId":"393","endLine":145,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":148,"column":69,"nodeType":"392","messageId":"393","endLine":148,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":154,"column":69,"nodeType":"392","messageId":"393","endLine":154,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":161,"column":16,"nodeType":"392","messageId":"393","endLine":161,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":181,"column":60,"nodeType":"392","messageId":"393","endLine":181,"endColumn":62},{"ruleId":"390","severity":1,"message":"391","line":212,"column":43,"nodeType":"392","messageId":"393","endLine":212,"endColumn":45},{"ruleId":"390","severity":1,"message":"391","line":228,"column":10,"nodeType":"392","messageId":"393","endLine":228,"endColumn":12},{"ruleId":"390","severity":1,"message":"391","line":247,"column":23,"nodeType":"392","messageId":"393","endLine":247,"endColumn":25},{"ruleId":"379","severity":1,"message":"398","line":263,"column":5,"nodeType":"381","messageId":"382","endLine":263,"endColumn":11},{"ruleId":"390","severity":1,"message":"391","line":289,"column":10,"nodeType":"392","messageId":"393","endLine":289,"endColumn":12},{"ruleId":"390","severity":1,"message":"391","line":306,"column":29,"nodeType":"392","messageId":"393","endLine":306,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":308,"column":21,"nodeType":"396","endLine":308,"endColumn":100},{"ruleId":"394","severity":1,"message":"395","line":309,"column":21,"nodeType":"396","endLine":309,"endColumn":70},{"ruleId":"390","severity":1,"message":"391","line":311,"column":29,"nodeType":"392","messageId":"393","endLine":311,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":313,"column":22,"nodeType":"396","endLine":313,"endColumn":75},{"ruleId":"394","severity":1,"message":"395","line":317,"column":23,"nodeType":"396","endLine":317,"endColumn":76},{"ruleId":"394","severity":1,"message":"395","line":318,"column":23,"nodeType":"396","endLine":318,"endColumn":100},{"ruleId":"390","severity":1,"message":"391","line":346,"column":29,"nodeType":"392","messageId":"393","endLine":346,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":348,"column":21,"nodeType":"396","endLine":348,"endColumn":100},{"ruleId":"394","severity":1,"message":"395","line":349,"column":21,"nodeType":"396","endLine":349,"endColumn":70},{"ruleId":"390","severity":1,"message":"391","line":351,"column":29,"nodeType":"392","messageId":"393","endLine":351,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":353,"column":22,"nodeType":"396","endLine":353,"endColumn":75},{"ruleId":"394","severity":1,"message":"395","line":357,"column":23,"nodeType":"396","endLine":357,"endColumn":76},{"ruleId":"394","severity":1,"message":"395","line":358,"column":23,"nodeType":"396","endLine":358,"endColumn":100},{"ruleId":"379","severity":1,"message":"399","line":1,"column":15,"nodeType":"381","messageId":"382","endLine":1,"endColumn":23},{"ruleId":"379","severity":1,"message":"397","line":1,"column":24,"nodeType":"381","messageId":"382","endLine":1,"endColumn":33},{"ruleId":"390","severity":1,"message":"391","line":39,"column":21,"nodeType":"392","messageId":"393","endLine":39,"endColumn":23},{"ruleId":"390","severity":1,"message":"391","line":46,"column":37,"nodeType":"392","messageId":"393","endLine":46,"endColumn":39},{"ruleId":"390","severity":1,"message":"391","line":59,"column":23,"nodeType":"392","messageId":"393","endLine":59,"endColumn":25},{"ruleId":"390","severity":1,"message":"391","line":91,"column":46,"nodeType":"392","messageId":"393","endLine":91,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":94,"column":69,"nodeType":"392","messageId":"393","endLine":94,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":100,"column":69,"nodeType":"392","messageId":"393","endLine":100,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":107,"column":16,"nodeType":"392","messageId":"393","endLine":107,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":127,"column":61,"nodeType":"392","messageId":"393","endLine":127,"endColumn":63},{"ruleId":"390","severity":1,"message":"391","line":146,"column":46,"nodeType":"392","messageId":"393","endLine":146,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":149,"column":69,"nodeType":"392","messageId":"393","endLine":149,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":155,"column":69,"nodeType":"392","messageId":"393","endLine":155,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":162,"column":16,"nodeType":"392","messageId":"393","endLine":162,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":182,"column":60,"nodeType":"392","messageId":"393","endLine":182,"endColumn":62},{"ruleId":"390","severity":1,"message":"391","line":213,"column":43,"nodeType":"392","messageId":"393","endLine":213,"endColumn":45},{"ruleId":"390","severity":1,"message":"391","line":228,"column":10,"nodeType":"392","messageId":"393","endLine":228,"endColumn":12},{"ruleId":"390","severity":1,"message":"391","line":248,"column":23,"nodeType":"392","messageId":"393","endLine":248,"endColumn":25},{"ruleId":"390","severity":1,"message":"391","line":277,"column":52,"nodeType":"392","messageId":"393","endLine":277,"endColumn":54},{"ruleId":"390","severity":1,"message":"391","line":296,"column":10,"nodeType":"392","messageId":"393","endLine":296,"endColumn":12},{"ruleId":"390","severity":1,"message":"391","line":314,"column":29,"nodeType":"392","messageId":"393","endLine":314,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":316,"column":21,"nodeType":"396","endLine":316,"endColumn":100},{"ruleId":"394","severity":1,"message":"395","line":317,"column":21,"nodeType":"396","endLine":317,"endColumn":70},{"ruleId":"390","severity":1,"message":"391","line":319,"column":29,"nodeType":"392","messageId":"393","endLine":319,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":321,"column":22,"nodeType":"396","endLine":321,"endColumn":75},{"ruleId":"394","severity":1,"message":"395","line":325,"column":23,"nodeType":"396","endLine":325,"endColumn":76},{"ruleId":"394","severity":1,"message":"395","line":326,"column":23,"nodeType":"396","endLine":326,"endColumn":100},{"ruleId":"390","severity":1,"message":"391","line":354,"column":29,"nodeType":"392","messageId":"393","endLine":354,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":356,"column":21,"nodeType":"396","endLine":356,"endColumn":100},{"ruleId":"394","severity":1,"message":"395","line":357,"column":21,"nodeType":"396","endLine":357,"endColumn":70},{"ruleId":"390","severity":1,"message":"391","line":359,"column":29,"nodeType":"392","messageId":"393","endLine":359,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":361,"column":22,"nodeType":"396","endLine":361,"endColumn":75},{"ruleId":"394","severity":1,"message":"395","line":365,"column":23,"nodeType":"396","endLine":365,"endColumn":76},{"ruleId":"394","severity":1,"message":"395","line":366,"column":23,"nodeType":"396","endLine":366,"endColumn":100},{"ruleId":"379","severity":1,"message":"399","line":1,"column":15,"nodeType":"381","messageId":"382","endLine":1,"endColumn":23},{"ruleId":"379","severity":1,"message":"397","line":1,"column":24,"nodeType":"381","messageId":"382","endLine":1,"endColumn":33},{"ruleId":"379","severity":1,"message":"400","line":25,"column":9,"nodeType":"381","messageId":"382","endLine":25,"endColumn":19},{"ruleId":"390","severity":1,"message":"391","line":40,"column":21,"nodeType":"392","messageId":"393","endLine":40,"endColumn":23},{"ruleId":"390","severity":1,"message":"391","line":47,"column":37,"nodeType":"392","messageId":"393","endLine":47,"endColumn":39},{"ruleId":"390","severity":1,"message":"391","line":60,"column":23,"nodeType":"392","messageId":"393","endLine":60,"endColumn":25},{"ruleId":"390","severity":1,"message":"391","line":91,"column":46,"nodeType":"392","messageId":"393","endLine":91,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":94,"column":69,"nodeType":"392","messageId":"393","endLine":94,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":100,"column":69,"nodeType":"392","messageId":"393","endLine":100,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":107,"column":16,"nodeType":"392","messageId":"393","endLine":107,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":127,"column":61,"nodeType":"392","messageId":"393","endLine":127,"endColumn":63},{"ruleId":"390","severity":1,"message":"391","line":146,"column":46,"nodeType":"392","messageId":"393","endLine":146,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":149,"column":69,"nodeType":"392","messageId":"393","endLine":149,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":155,"column":69,"nodeType":"392","messageId":"393","endLine":155,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":162,"column":16,"nodeType":"392","messageId":"393","endLine":162,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":182,"column":60,"nodeType":"392","messageId":"393","endLine":182,"endColumn":62},{"ruleId":"390","severity":1,"message":"391","line":212,"column":43,"nodeType":"392","messageId":"393","endLine":212,"endColumn":45},{"ruleId":"390","severity":1,"message":"391","line":229,"column":10,"nodeType":"392","messageId":"393","endLine":229,"endColumn":12},{"ruleId":"390","severity":1,"message":"391","line":248,"column":29,"nodeType":"392","messageId":"393","endLine":248,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":250,"column":21,"nodeType":"396","endLine":250,"endColumn":100},{"ruleId":"394","severity":1,"message":"395","line":251,"column":21,"nodeType":"396","endLine":251,"endColumn":70},{"ruleId":"390","severity":1,"message":"391","line":253,"column":29,"nodeType":"392","messageId":"393","endLine":253,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":255,"column":22,"nodeType":"396","endLine":255,"endColumn":75},{"ruleId":"394","severity":1,"message":"395","line":259,"column":23,"nodeType":"396","endLine":259,"endColumn":76},{"ruleId":"394","severity":1,"message":"395","line":260,"column":23,"nodeType":"396","endLine":260,"endColumn":100},{"ruleId":"390","severity":1,"message":"391","line":290,"column":29,"nodeType":"392","messageId":"393","endLine":290,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":292,"column":21,"nodeType":"396","endLine":292,"endColumn":100},{"ruleId":"394","severity":1,"message":"395","line":293,"column":21,"nodeType":"396","endLine":293,"endColumn":70},{"ruleId":"390","severity":1,"message":"391","line":295,"column":29,"nodeType":"392","messageId":"393","endLine":295,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":297,"column":22,"nodeType":"396","endLine":297,"endColumn":75},{"ruleId":"394","severity":1,"message":"395","line":301,"column":23,"nodeType":"396","endLine":301,"endColumn":76},{"ruleId":"394","severity":1,"message":"395","line":302,"column":23,"nodeType":"396","endLine":302,"endColumn":100},{"ruleId":"379","severity":1,"message":"387","line":2,"column":8,"nodeType":"381","messageId":"382","endLine":2,"endColumn":13},{"ruleId":"379","severity":1,"message":"401","line":3,"column":22,"nodeType":"381","messageId":"382","endLine":3,"endColumn":31},{"ruleId":"379","severity":1,"message":"402","line":7,"column":9,"nodeType":"381","messageId":"382","endLine":7,"endColumn":16},{"ruleId":"379","severity":1,"message":"403","line":14,"column":9,"nodeType":"381","messageId":"382","endLine":14,"endColumn":11},{"ruleId":"379","severity":1,"message":"404","line":15,"column":9,"nodeType":"381","messageId":"382","endLine":15,"endColumn":12},{"ruleId":"390","severity":1,"message":"391","line":17,"column":13,"nodeType":"392","messageId":"393","endLine":17,"endColumn":15},{"ruleId":"390","severity":1,"message":"391","line":37,"column":27,"nodeType":"392","messageId":"393","endLine":37,"endColumn":29},{"ruleId":"390","severity":1,"message":"391","line":66,"column":56,"nodeType":"392","messageId":"393","endLine":66,"endColumn":58},{"ruleId":"390","severity":1,"message":"391","line":39,"column":21,"nodeType":"392","messageId":"393","endLine":39,"endColumn":23},{"ruleId":"390","severity":1,"message":"391","line":46,"column":37,"nodeType":"392","messageId":"393","endLine":46,"endColumn":39},{"ruleId":"390","severity":1,"message":"391","line":58,"column":23,"nodeType":"392","messageId":"393","endLine":58,"endColumn":25},{"ruleId":"390","severity":1,"message":"391","line":75,"column":48,"nodeType":"392","messageId":"393","endLine":75,"endColumn":50},{"ruleId":"390","severity":1,"message":"391","line":78,"column":69,"nodeType":"392","messageId":"393","endLine":78,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":84,"column":69,"nodeType":"392","messageId":"393","endLine":84,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":91,"column":16,"nodeType":"392","messageId":"393","endLine":91,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":114,"column":61,"nodeType":"392","messageId":"393","endLine":114,"endColumn":63},{"ruleId":"390","severity":1,"message":"391","line":140,"column":46,"nodeType":"392","messageId":"393","endLine":140,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":143,"column":69,"nodeType":"392","messageId":"393","endLine":143,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":149,"column":69,"nodeType":"392","messageId":"393","endLine":149,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":156,"column":16,"nodeType":"392","messageId":"393","endLine":156,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":179,"column":61,"nodeType":"392","messageId":"393","endLine":179,"endColumn":63},{"ruleId":"390","severity":1,"message":"391","line":199,"column":46,"nodeType":"392","messageId":"393","endLine":199,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":202,"column":69,"nodeType":"392","messageId":"393","endLine":202,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":208,"column":69,"nodeType":"392","messageId":"393","endLine":208,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":215,"column":16,"nodeType":"392","messageId":"393","endLine":215,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":235,"column":60,"nodeType":"392","messageId":"393","endLine":235,"endColumn":62},{"ruleId":"390","severity":1,"message":"391","line":266,"column":43,"nodeType":"392","messageId":"393","endLine":266,"endColumn":45},{"ruleId":"390","severity":1,"message":"391","line":281,"column":10,"nodeType":"392","messageId":"393","endLine":281,"endColumn":12},{"ruleId":"390","severity":1,"message":"391","line":316,"column":48,"nodeType":"392","messageId":"393","endLine":316,"endColumn":50},{"ruleId":"390","severity":1,"message":"391","line":329,"column":29,"nodeType":"392","messageId":"393","endLine":329,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":331,"column":21,"nodeType":"396","endLine":331,"endColumn":100},{"ruleId":"394","severity":1,"message":"395","line":332,"column":21,"nodeType":"396","endLine":332,"endColumn":70},{"ruleId":"390","severity":1,"message":"391","line":334,"column":29,"nodeType":"392","messageId":"393","endLine":334,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":336,"column":22,"nodeType":"396","endLine":336,"endColumn":75},{"ruleId":"394","severity":1,"message":"395","line":340,"column":23,"nodeType":"396","endLine":340,"endColumn":76},{"ruleId":"394","severity":1,"message":"395","line":341,"column":23,"nodeType":"396","endLine":341,"endColumn":100},{"ruleId":"390","severity":1,"message":"391","line":385,"column":82,"nodeType":"392","messageId":"393","endLine":385,"endColumn":84},{"ruleId":"390","severity":1,"message":"391","line":403,"column":29,"nodeType":"392","messageId":"393","endLine":403,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":405,"column":21,"nodeType":"396","endLine":405,"endColumn":100},{"ruleId":"394","severity":1,"message":"395","line":406,"column":21,"nodeType":"396","endLine":406,"endColumn":70},{"ruleId":"390","severity":1,"message":"391","line":408,"column":29,"nodeType":"392","messageId":"393","endLine":408,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":410,"column":22,"nodeType":"396","endLine":410,"endColumn":75},{"ruleId":"394","severity":1,"message":"395","line":414,"column":23,"nodeType":"396","endLine":414,"endColumn":76},{"ruleId":"394","severity":1,"message":"395","line":415,"column":23,"nodeType":"396","endLine":415,"endColumn":100},{"ruleId":"379","severity":1,"message":"399","line":1,"column":15,"nodeType":"381","messageId":"382","endLine":1,"endColumn":23},{"ruleId":"379","severity":1,"message":"397","line":1,"column":24,"nodeType":"381","messageId":"382","endLine":1,"endColumn":33},{"ruleId":"390","severity":1,"message":"391","line":39,"column":21,"nodeType":"392","messageId":"393","endLine":39,"endColumn":23},{"ruleId":"390","severity":1,"message":"391","line":46,"column":37,"nodeType":"392","messageId":"393","endLine":46,"endColumn":39},{"ruleId":"390","severity":1,"message":"391","line":59,"column":23,"nodeType":"392","messageId":"393","endLine":59,"endColumn":25},{"ruleId":"390","severity":1,"message":"391","line":79,"column":11,"nodeType":"392","messageId":"393","endLine":79,"endColumn":13},{"ruleId":"390","severity":1,"message":"391","line":119,"column":46,"nodeType":"392","messageId":"393","endLine":119,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":122,"column":69,"nodeType":"392","messageId":"393","endLine":122,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":128,"column":69,"nodeType":"392","messageId":"393","endLine":128,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":135,"column":16,"nodeType":"392","messageId":"393","endLine":135,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":158,"column":61,"nodeType":"392","messageId":"393","endLine":158,"endColumn":63},{"ruleId":"390","severity":1,"message":"391","line":178,"column":46,"nodeType":"392","messageId":"393","endLine":178,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":181,"column":69,"nodeType":"392","messageId":"393","endLine":181,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":187,"column":69,"nodeType":"392","messageId":"393","endLine":187,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":194,"column":16,"nodeType":"392","messageId":"393","endLine":194,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":214,"column":60,"nodeType":"392","messageId":"393","endLine":214,"endColumn":62},{"ruleId":"390","severity":1,"message":"391","line":245,"column":43,"nodeType":"392","messageId":"393","endLine":245,"endColumn":45},{"ruleId":"390","severity":1,"message":"391","line":260,"column":10,"nodeType":"392","messageId":"393","endLine":260,"endColumn":12},{"ruleId":"390","severity":1,"message":"391","line":294,"column":48,"nodeType":"392","messageId":"393","endLine":294,"endColumn":50},{"ruleId":"390","severity":1,"message":"391","line":307,"column":29,"nodeType":"392","messageId":"393","endLine":307,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":309,"column":21,"nodeType":"396","endLine":309,"endColumn":100},{"ruleId":"394","severity":1,"message":"395","line":310,"column":21,"nodeType":"396","endLine":310,"endColumn":70},{"ruleId":"390","severity":1,"message":"391","line":312,"column":29,"nodeType":"392","messageId":"393","endLine":312,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":314,"column":22,"nodeType":"396","endLine":314,"endColumn":75},{"ruleId":"394","severity":1,"message":"395","line":318,"column":23,"nodeType":"396","endLine":318,"endColumn":76},{"ruleId":"394","severity":1,"message":"395","line":319,"column":23,"nodeType":"396","endLine":319,"endColumn":100},{"ruleId":"390","severity":1,"message":"391","line":362,"column":82,"nodeType":"392","messageId":"393","endLine":362,"endColumn":84},{"ruleId":"390","severity":1,"message":"391","line":380,"column":29,"nodeType":"392","messageId":"393","endLine":380,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":382,"column":21,"nodeType":"396","endLine":382,"endColumn":100},{"ruleId":"394","severity":1,"message":"395","line":383,"column":21,"nodeType":"396","endLine":383,"endColumn":70},{"ruleId":"390","severity":1,"message":"391","line":385,"column":29,"nodeType":"392","messageId":"393","endLine":385,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":387,"column":22,"nodeType":"396","endLine":387,"endColumn":75},{"ruleId":"394","severity":1,"message":"395","line":391,"column":23,"nodeType":"396","endLine":391,"endColumn":76},{"ruleId":"394","severity":1,"message":"395","line":392,"column":23,"nodeType":"396","endLine":392,"endColumn":100},{"ruleId":"379","severity":1,"message":"399","line":1,"column":15,"nodeType":"381","messageId":"382","endLine":1,"endColumn":23},{"ruleId":"379","severity":1,"message":"397","line":1,"column":24,"nodeType":"381","messageId":"382","endLine":1,"endColumn":33},{"ruleId":"379","severity":1,"message":"400","line":25,"column":9,"nodeType":"381","messageId":"382","endLine":25,"endColumn":19},{"ruleId":"390","severity":1,"message":"391","line":40,"column":21,"nodeType":"392","messageId":"393","endLine":40,"endColumn":23},{"ruleId":"390","severity":1,"message":"391","line":47,"column":37,"nodeType":"392","messageId":"393","endLine":47,"endColumn":39},{"ruleId":"390","severity":1,"message":"391","line":59,"column":23,"nodeType":"392","messageId":"393","endLine":59,"endColumn":25},{"ruleId":"390","severity":1,"message":"391","line":91,"column":46,"nodeType":"392","messageId":"393","endLine":91,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":94,"column":69,"nodeType":"392","messageId":"393","endLine":94,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":100,"column":69,"nodeType":"392","messageId":"393","endLine":100,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":107,"column":16,"nodeType":"392","messageId":"393","endLine":107,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":130,"column":61,"nodeType":"392","messageId":"393","endLine":130,"endColumn":63},{"ruleId":"390","severity":1,"message":"391","line":150,"column":46,"nodeType":"392","messageId":"393","endLine":150,"endColumn":48},{"ruleId":"390","severity":1,"message":"391","line":153,"column":69,"nodeType":"392","messageId":"393","endLine":153,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":159,"column":69,"nodeType":"392","messageId":"393","endLine":159,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":166,"column":16,"nodeType":"392","messageId":"393","endLine":166,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":186,"column":60,"nodeType":"392","messageId":"393","endLine":186,"endColumn":62},{"ruleId":"390","severity":1,"message":"391","line":217,"column":43,"nodeType":"392","messageId":"393","endLine":217,"endColumn":45},{"ruleId":"390","severity":1,"message":"391","line":232,"column":10,"nodeType":"392","messageId":"393","endLine":232,"endColumn":12},{"ruleId":"390","severity":1,"message":"391","line":267,"column":48,"nodeType":"392","messageId":"393","endLine":267,"endColumn":50},{"ruleId":"390","severity":1,"message":"391","line":280,"column":29,"nodeType":"392","messageId":"393","endLine":280,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":282,"column":21,"nodeType":"396","endLine":282,"endColumn":104},{"ruleId":"394","severity":1,"message":"395","line":283,"column":21,"nodeType":"396","endLine":283,"endColumn":74},{"ruleId":"390","severity":1,"message":"391","line":285,"column":29,"nodeType":"392","messageId":"393","endLine":285,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":287,"column":22,"nodeType":"396","endLine":287,"endColumn":79},{"ruleId":"394","severity":1,"message":"395","line":291,"column":23,"nodeType":"396","endLine":291,"endColumn":80},{"ruleId":"394","severity":1,"message":"395","line":292,"column":23,"nodeType":"396","endLine":292,"endColumn":104},{"ruleId":"390","severity":1,"message":"391","line":336,"column":82,"nodeType":"392","messageId":"393","endLine":336,"endColumn":84},{"ruleId":"390","severity":1,"message":"391","line":354,"column":29,"nodeType":"392","messageId":"393","endLine":354,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":356,"column":21,"nodeType":"396","endLine":356,"endColumn":104},{"ruleId":"394","severity":1,"message":"395","line":357,"column":21,"nodeType":"396","endLine":357,"endColumn":74},{"ruleId":"390","severity":1,"message":"391","line":359,"column":29,"nodeType":"392","messageId":"393","endLine":359,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":361,"column":22,"nodeType":"396","endLine":361,"endColumn":79},{"ruleId":"394","severity":1,"message":"395","line":365,"column":23,"nodeType":"396","endLine":365,"endColumn":80},{"ruleId":"394","severity":1,"message":"395","line":366,"column":23,"nodeType":"396","endLine":366,"endColumn":104},"no-native-reassign",["405"],"no-negated-in-lhs",["406"],"no-unused-vars","'Test' is defined but never used.","Identifier","unusedVar","'Test2' is defined but never used.","'Test3' is defined but never used.","'Test4' is defined but never used.","'Test5' is defined but never used.","'Test6' is defined but never used.","'Test8' is defined but never used.","'Test9' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'ansarr' is assigned a value but never used.","'useState' is defined but never used.","'optionlist' is defined but never used.","'useParams' is defined but never used.","'history' is assigned a value but never used.","'id' is assigned a value but never used.","'num' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]