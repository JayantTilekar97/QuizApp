{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-32/Documents/interview/src/components/Test7.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Test7() {\n  _s();\n\n  let axlist = [];\n  let testarr = [];\n  let currtest = localStorage.getItem(\"test\");\n  testarr = JSON.parse(currtest);\n  console.log(testarr);\n  axlist = testarr.json;\n  let history = useNavigate();\n  var ansoptn = null;\n  var multioptn = [];\n  let {\n    id\n  } = useParams();\n  let {\n    num\n  } = useParams();\n  let curnum;\n  let testindx;\n  let optionlist;\n  console.log(id);\n  console.log(num);\n  let testquest = [];\n  let testname;\n  let options = [];\n  let type = \"Multiple-Response\";\n  let limit; //-----------------Intial loop for retriving question and options from URL-----------------//\n\n  for (let i = 0; i < axlist.length; i++) {\n    if (axlist[i]._id == id) {\n      testindx = i;\n      testname = axlist[i].name;\n      limit = axlist[i].questions.length;\n\n      for (let j = 0; j < limit; j++) {\n        if (axlist[i].questions[j]._id == num) {\n          curnum = j;\n\n          if (curnum <= testarr.corctans.length - 1) {\n            testarr.corctans.splice(curnum, 1);\n            localStorage.setItem(\"test\", JSON.stringify(testarr));\n          }\n        }\n      }\n\n      testquest = axlist[i].questions[curnum];\n      options = testquest.options;\n\n      if (testquest.type == type) {\n        type = \"Multiple-Response\";\n      } else {\n        type = \"Single\";\n      }\n\n      console.log(type);\n    }\n  } //-----------------------previous button---------------------//\n\n\n  let prevquest = () => {\n    multioptn = [];\n    let prevpage = axlist[testindx].questions[curnum - 1]._id;\n    history(\"/test/\" + id + \"/\" + prevpage);\n    window.location.reload(false);\n  }; //-----------------------next button---------------------//\n\n\n  let nextquest = () => {\n    let nextpage = axlist[testindx].questions[curnum + 1]._id;\n    console.log(ansoptn);\n    console.log(multioptn);\n    console.log(axlist[testindx].questions[curnum].correctOptionIndex);\n\n    if (axlist[testindx].questions[curnum].type == \"Multiple-Response\") {\n      let counter = 0;\n\n      if (axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length) {\n        for (let i = 0; i < axlist[testindx].questions[curnum].correctOptionIndex.length; i++) {\n          for (let j = 0; j < multioptn.length; j++) {\n            if (axlist[testindx].questions[curnum].correctOptionIndex[i] == parseInt(multioptn[j])) {\n              counter++;\n            }\n          }\n        }\n\n        console.log(counter);\n\n        if (counter == multioptn.length) {\n          testarr.ans[curnum] = multioptn;\n          testarr.corctans.push(\"correct\");\n          multioptn = [];\n        } else {\n          testarr.ans[curnum] = multioptn;\n          testarr.corctans.push(\"wrong\");\n          multioptn = [];\n        }\n      } else {\n        testarr.ans[curnum] = multioptn;\n        testarr.corctans.push(\"wrong\");\n        multioptn = [];\n      }\n    } else {\n      console.log(ansoptn);\n      console.log(axlist[testindx].questions[curnum].correctOptionIndex);\n\n      if (axlist[testindx].questions[curnum].correctOptionIndex == ansoptn) {\n        testarr.ans[curnum] = ansoptn;\n        testarr.corctans.push(\"correct\");\n      } else {\n        testarr.ans[curnum] = ansoptn;\n        testarr.corctans.push(\"wrong\");\n      }\n    }\n\n    localStorage.setItem(\"test\", JSON.stringify(testarr));\n    history(\"/test/\" + id + \"/\" + nextpage);\n    window.location.reload(false);\n  }; //-----------------------finish button---------------------//\n\n\n  let finish = () => {\n    if (axlist[testindx].questions[curnum].type == \"Multiple-Response\") {\n      let counter = 0;\n\n      if (axlist[testindx].questions[curnum].correctOptionIndex.length == multioptn.length) {\n        for (let i = 0; i < axlist[testindx].questions[curnum].correctOptionIndex.length; i++) {\n          for (let j = 0; j < multioptn.length; j++) {\n            if (axlist[testindx].questions[curnum].correctOptionIndex[i] == parseInt(multioptn[j])) {\n              counter++;\n            }\n          }\n        }\n\n        console.log(counter);\n\n        if (counter == multioptn.length) {\n          testarr.ans[curnum] = multioptn;\n          testarr.corctans.push(\"correct\");\n          multioptn = [];\n        } else {\n          testarr.ans[curnum] = multioptn;\n          testarr.corctans.push(\"wrong\");\n          multioptn = [];\n        }\n      } else {\n        testarr.ans[curnum] = multioptn;\n        testarr.corctans.push(\"wrong\");\n        multioptn = [];\n      }\n    } else {\n      if (axlist[testindx].questions[curnum].correctOptionIndex == ansoptn) {\n        testarr.ans[curnum] = ansoptn;\n        testarr.corctans.push(\"correct\");\n      } else {\n        testarr.ans[curnum] = ansoptn;\n        testarr.corctans.push(\"wrong\");\n      }\n    }\n\n    localStorage.setItem(\"test\", JSON.stringify(testarr));\n    history(\"/finish\");\n  }; //----------------------handle radio changes----------------------//\n\n\n  let handleRadio = event => {\n    ansoptn = event.target.value;\n    event.target.checked = true;\n    console.log(ansoptn);\n  }; //----------------------handle checkbox changes----------------------//\n\n\n  let handleCheck = event => {\n    let temparr = multioptn;\n\n    if (temparr.includes(event.target.value) == true) {\n      let indx = temparr.indexOf(event.target.value);\n      temparr.splice(indx, 1);\n    } else {\n      temparr.push(event.target.value);\n    }\n\n    multioptn = temparr;\n  }; //---------------------displaying question & options---------------------//\n\n\n  if (type == \"Single\") {\n    let ansarr = [];\n    let temparr = [];\n    let temp = localStorage.getItem(\"test\");\n    temparr = JSON.parse(temp);\n    ansarr = temparr.ans;\n    console.log(ansarr[curnum]);\n    console.log(curnum);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Interview Portal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"panel panel-default\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"panel-heading\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: testname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"panel-body\",\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  style: {\n                    textAlign: \"left\",\n                    paddingLeft: 15\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: testquest.questionText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 21\n                  }, this), typeof ansarr[curnum] == \"undefined\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: options.map((optn, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        id: index,\n                        onClick: handleRadio,\n                        type: \"radio\",\n                        name: \"option\" + num,\n                        value: index\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: optn\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: \"none\"\n                      },\n                      children: ansoptn = ansarr[curnum]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 25\n                    }, this), options.map((optn, index) => ansarr[curnum] == index.toString() ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        id: index,\n                        defaultChecked: true,\n                        onClick: handleRadio,\n                        type: \"radio\",\n                        name: \"option\" + num,\n                        value: index\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: optn\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        id: index,\n                        onClick: handleRadio,\n                        type: \"radio\",\n                        name: \"option\" + num,\n                        value: index\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: optn\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 263,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 29\n                    }, this)), \" \"]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), curnum == limit - 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"panel-footer\",\n                style: {\n                  textAlign: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  style: {\n                    marginRight: 960\n                  },\n                  onClick: () => prevquest(),\n                  class: \"btn btn-success\",\n                  children: \"Previous\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  onClick: () => finish(),\n                  class: \"btn btn-danger\",\n                  children: \"Finish\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this) : curnum == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"panel-footer\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  onClick: () => nextquest(),\n                  class: \"btn btn-success\",\n                  children: \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"panel-footer\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  onClick: () => prevquest(),\n                  class: \"btn btn-success\",\n                  children: \"Previous\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  onClick: () => nextquest(),\n                  class: \"btn btn-success\",\n                  style: {\n                    marginLeft: 15\n                  },\n                  children: \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this);\n  } else {\n    let ansarr = [];\n    let temparr = [];\n    let temp = localStorage.getItem(\"test\");\n    temparr = JSON.parse(temp);\n    ansarr = temparr.ans;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Interview Portal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"panel panel-default\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"panel-heading\",\n              style: {\n                textAlign: \"left\"\n              },\n              children: testname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"panel-body\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                style: {\n                  textAlign: \"left\",\n                  paddingLeft: 15\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: testquest.questionText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: typeof ansarr[curnum] == \"undefined\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: options.map((optn, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        onClick: handleCheck,\n                        type: \"checkbox\",\n                        name: \"option\" + num,\n                        value: index\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 340,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        for: index,\n                        children: optn\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 346,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: \"none\"\n                      },\n                      children: multioptn = ansarr[curnum]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 25\n                    }, this), options.map((optn, index) => ansarr[curnum].includes(index.toString()) == true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          onClick: handleCheck,\n                          defaultChecked: true,\n                          type: \"checkbox\",\n                          name: \"option\" + num,\n                          value: index\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 359,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          for: index,\n                          children: optn\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 366,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 358,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          onClick: handleCheck,\n                          type: \"checkbox\",\n                          name: \"option\" + num,\n                          value: index\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 372,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          for: index,\n                          children: optn\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 378,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 371,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false))]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), curnum == limit - 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"panel-footer\",\n              style: {\n                textAlign: \"right\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => prevquest(),\n                style: {\n                  marginRight: 960\n                },\n                class: \"btn btn-success\",\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => finish(),\n                class: \"btn btn-danger\",\n                children: \"Finish\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this) : curnum == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"panel-footer\",\n              style: {\n                textAlign: \"left\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => nextquest(),\n                class: \"btn btn-success\",\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"panel-footer\",\n              style: {\n                textAlign: \"left\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => prevquest(),\n                class: \"btn btn-success\",\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => nextquest(),\n                class: \"btn btn-success\",\n                style: {\n                  marginLeft: 15\n                },\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Test7, \"waO2mbH6UiBLpYN93FYbliA0TKw=\", false, function () {\n  return [useNavigate, useParams, useParams];\n});\n\n_c = Test7;\nexport default Test7;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test7\");","map":{"version":3,"sources":["/home/am-pc-32/Documents/interview/src/components/Test7.js"],"names":["React","useState","useEffect","useNavigate","useParams","Test7","axlist","testarr","currtest","localStorage","getItem","JSON","parse","console","log","json","history","ansoptn","multioptn","id","num","curnum","testindx","optionlist","testquest","testname","options","type","limit","i","length","_id","name","questions","j","corctans","splice","setItem","stringify","prevquest","prevpage","window","location","reload","nextquest","nextpage","correctOptionIndex","counter","parseInt","ans","push","finish","handleRadio","event","target","value","checked","handleCheck","temparr","includes","indx","indexOf","ansarr","temp","textAlign","paddingLeft","questionText","map","optn","index","display","toString","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nfunction Test7() {\n  let axlist = [];\n  let testarr = [];\n  let currtest = localStorage.getItem(\"test\");\n  testarr = JSON.parse(currtest);\n  console.log(testarr);\n  axlist = testarr.json;\n\n  let history = useNavigate();\n\n  var ansoptn = null;\n  var multioptn = [];\n\n  let { id } = useParams();\n  let { num } = useParams();\n\n  let curnum;\n  let testindx;\n  let optionlist;\n\n  console.log(id);\n  console.log(num);\n\n  let testquest = [];\n  let testname;\n  let options = [];\n  let type = \"Multiple-Response\";\n  let limit;\n\n  //-----------------Intial loop for retriving question and options from URL-----------------//\n  for (let i = 0; i < axlist.length; i++) {\n    if (axlist[i]._id == id) {\n      testindx = i;\n      testname = axlist[i].name;\n      limit = axlist[i].questions.length;\n      for (let j = 0; j < limit; j++) {\n        if (axlist[i].questions[j]._id == num) {\n          curnum = j;\n          if (curnum <= testarr.corctans.length - 1) {\n            testarr.corctans.splice(curnum, 1);\n            localStorage.setItem(\"test\", JSON.stringify(testarr));\n          }\n        }\n      }\n      testquest = axlist[i].questions[curnum];\n      options = testquest.options;\n      if (testquest.type == type) {\n        type = \"Multiple-Response\";\n      } else {\n        type = \"Single\";\n      }\n      console.log(type);\n    }\n  }\n\n  //-----------------------previous button---------------------//\n  let prevquest = () => {\n    multioptn = [];\n    let prevpage = axlist[testindx].questions[curnum - 1]._id;\n    history(\"/test/\" + id + \"/\" + prevpage);\n    window.location.reload(false);\n  };\n\n  //-----------------------next button---------------------//\n  let nextquest = () => {\n    let nextpage = axlist[testindx].questions[curnum + 1]._id;\n    console.log(ansoptn);\n    console.log(multioptn);\n    console.log(axlist[testindx].questions[curnum].correctOptionIndex);\n\n    if (axlist[testindx].questions[curnum].type == \"Multiple-Response\") {\n      let counter = 0;\n      if (\n        axlist[testindx].questions[curnum].correctOptionIndex.length ==\n        multioptn.length\n      ) {\n        for (\n          let i = 0;\n          i < axlist[testindx].questions[curnum].correctOptionIndex.length;\n          i++\n        ) {\n          for (let j = 0; j < multioptn.length; j++) {\n            if (\n              axlist[testindx].questions[curnum].correctOptionIndex[i] ==\n              parseInt(multioptn[j])\n            ) {\n              counter++;\n            }\n          }\n        }\n        console.log(counter);\n        if (counter == multioptn.length) {\n          testarr.ans[curnum] = multioptn;\n          testarr.corctans.push(\"correct\");\n          multioptn = [];\n        } else {\n          testarr.ans[curnum] = multioptn;\n          testarr.corctans.push(\"wrong\");\n          multioptn = [];\n        }\n      } else {\n        testarr.ans[curnum] = multioptn;\n        testarr.corctans.push(\"wrong\");\n        multioptn = [];\n      }\n    } else {\n      console.log(ansoptn);\n      console.log(axlist[testindx].questions[curnum].correctOptionIndex);\n\n      if (axlist[testindx].questions[curnum].correctOptionIndex == ansoptn) {\n        testarr.ans[curnum] = ansoptn;\n        testarr.corctans.push(\"correct\");\n      } else {\n        testarr.ans[curnum] = ansoptn;\n        testarr.corctans.push(\"wrong\");\n      }\n    }\n    localStorage.setItem(\"test\", JSON.stringify(testarr));\n    history(\"/test/\" + id + \"/\" + nextpage);\n    window.location.reload(false);\n  };\n\n  //-----------------------finish button---------------------//\n  let finish = () => {\n    if (axlist[testindx].questions[curnum].type == \"Multiple-Response\") {\n      let counter = 0;\n      if (\n        axlist[testindx].questions[curnum].correctOptionIndex.length ==\n        multioptn.length\n      ) {\n        for (\n          let i = 0;\n          i < axlist[testindx].questions[curnum].correctOptionIndex.length;\n          i++\n        ) {\n          for (let j = 0; j < multioptn.length; j++) {\n            if (\n              axlist[testindx].questions[curnum].correctOptionIndex[i] ==\n              parseInt(multioptn[j])\n            ) {\n              counter++;\n            }\n          }\n        }\n        console.log(counter);\n        if (counter == multioptn.length) {\n          testarr.ans[curnum] = multioptn;\n          testarr.corctans.push(\"correct\");\n          multioptn = [];\n        } else {\n          testarr.ans[curnum] = multioptn;\n          testarr.corctans.push(\"wrong\");\n          multioptn = [];\n        }\n      } else {\n        testarr.ans[curnum] = multioptn;\n        testarr.corctans.push(\"wrong\");\n        multioptn = [];\n      }\n    } else {\n      if (axlist[testindx].questions[curnum].correctOptionIndex == ansoptn) {\n        testarr.ans[curnum] = ansoptn;\n        testarr.corctans.push(\"correct\");\n      } else {\n        testarr.ans[curnum] = ansoptn;\n        testarr.corctans.push(\"wrong\");\n      }\n    }\n    localStorage.setItem(\"test\", JSON.stringify(testarr));\n    history(\"/finish\");\n  };\n\n  //----------------------handle radio changes----------------------//\n  let handleRadio = (event) => {\n    ansoptn = event.target.value;\n    event.target.checked = true;\n    console.log(ansoptn);\n  };\n\n  //----------------------handle checkbox changes----------------------//\n  let handleCheck = (event) => {\n    let temparr = multioptn;\n    if (temparr.includes(event.target.value) == true) {\n      let indx = temparr.indexOf(event.target.value);\n      temparr.splice(indx, 1);\n    } else {\n      temparr.push(event.target.value);\n    }\n    multioptn = temparr;\n  };\n\n  //---------------------displaying question & options---------------------//\n  if (type == \"Single\") {\n    let ansarr = [];\n    let temparr = [];\n    let temp = localStorage.getItem(\"test\");\n    temparr = JSON.parse(temp);\n    ansarr = temparr.ans;\n    console.log(ansarr[curnum]);\n    console.log(curnum);\n\n    return (\n      <div class=\"container\">\n        <div class=\"row\">\n          <h1>My Interview Portal</h1>\n          <hr />\n          <form>\n            <div class=\"col-md-12\">\n              <div class=\"panel panel-default\">\n                <div class=\"panel-heading\" style={{ textAlign: \"left\" }}>\n                  {testname}\n                </div>\n                <div class=\"panel-body\">\n                  <form style={{ textAlign: \"left\", paddingLeft: 15 }}>\n                    <label>{testquest.questionText}</label>\n\n                    {/* ---------------------setting options of Radio--------------------- */}\n                    {typeof ansarr[curnum] == \"undefined\" ? (\n                      <>\n                        {options.map((optn, index) => (\n                          <div>\n                            <input\n                              id={index}\n                              onClick={handleRadio}\n                              type=\"radio\"\n                              name={\"option\" + num}\n                              value={index}\n                            />\n                            <label>{optn}</label>\n                          </div>\n                        ))}\n                      </>\n                    ) : (\n                      <>\n                        <div style={{ display: \"none\" }}>\n                          {(ansoptn = ansarr[curnum])}\n                        </div>\n                        {options.map((optn, index) =>\n                          ansarr[curnum] == index.toString() ? (\n                            <div>\n                              <input\n                                id={index}\n                                defaultChecked={true}\n                                onClick={handleRadio}\n                                type=\"radio\"\n                                name={\"option\" + num}\n                                value={index}\n                              />\n                              <label>{optn}</label>\n                            </div>\n                          ) : (\n                            <div>\n                              <input\n                                id={index}\n                                onClick={handleRadio}\n                                type=\"radio\"\n                                name={\"option\" + num}\n                                value={index}\n                              />\n                              <label>{optn}</label>\n                            </div>\n                          )\n                        )}{\" \"}\n                      </>\n                    )}\n                  </form>\n                </div>\n\n                {curnum == limit - 1 ? (\n                  <div class=\"panel-footer\" style={{ textAlign: \"right\" }}>\n                    <a\n                      style={{ marginRight: 960 }}\n                      onClick={() => prevquest()}\n                      class=\"btn btn-success\"\n                    >\n                      Previous\n                    </a>\n                    <a onClick={() => finish()} class=\"btn btn-danger\">\n                      Finish\n                    </a>\n                  </div>\n                ) : curnum == 0 ? (\n                  <div class=\"panel-footer\" style={{ textAlign: \"left\" }}>\n                    <a onClick={() => nextquest()} class=\"btn btn-success\">\n                      Next\n                    </a>\n                  </div>\n                ) : (\n                  <div class=\"panel-footer\" style={{ textAlign: \"left\" }}>\n                    <a onClick={() => prevquest()} class=\"btn btn-success\">\n                      Previous\n                    </a>\n                    <a\n                      onClick={() => nextquest()}\n                      class=\"btn btn-success\"\n                      style={{ marginLeft: 15 }}\n                    >\n                      Next\n                    </a>\n                  </div>\n                )}\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  } else {\n    let ansarr = [];\n    let temparr = [];\n    let temp = localStorage.getItem(\"test\");\n    temparr = JSON.parse(temp);\n    ansarr = temparr.ans;\n\n    return (\n      <div class=\"container\">\n        <div class=\"row\">\n          <h1>My Interview Portal</h1>\n          <hr />\n          <div class=\"col-md-12\">\n            <div class=\"panel panel-default\">\n              <div class=\"panel-heading\" style={{ textAlign: \"left\" }}>\n                {testname}\n              </div>\n              <div class=\"panel-body\">\n                <form style={{ textAlign: \"left\", paddingLeft: 15 }}>\n                  <label>\n                    <b>{testquest.questionText}</b>\n                  </label>\n                  <div>\n                    {/* ---------------------setting options of Checkbox--------------------- */}\n\n                    {typeof ansarr[curnum] == \"undefined\" ? (\n                      <>\n                        {options.map((optn, index) => (\n                          <div>\n                            <input\n                              onClick={handleCheck}\n                              type=\"checkbox\"\n                              name={\"option\" + num}\n                              value={index}\n                            />\n                            <label for={index}>{optn}</label>\n                          </div>\n                        ))}\n                      </>\n                    ) : (\n                      <>\n                        <div style={{ display: \"none\" }}>\n                          {(multioptn = ansarr[curnum])}\n                        </div>\n                        {options.map((optn, index) =>\n                          ansarr[curnum].includes(index.toString()) == true ? (\n                            <>\n                              <div>\n                                <input\n                                  onClick={handleCheck}\n                                  defaultChecked={true}\n                                  type=\"checkbox\"\n                                  name={\"option\" + num}\n                                  value={index}\n                                />\n                                <label for={index}>{optn}</label>\n                              </div>\n                            </>\n                          ) : (\n                            <>\n                              <div>\n                                <input\n                                  onClick={handleCheck}\n                                  type=\"checkbox\"\n                                  name={\"option\" + num}\n                                  value={index}\n                                />\n                                <label for={index}>{optn}</label>\n                              </div>\n                            </>\n                          )\n                        )}\n                      </>\n                    )}\n                  </div>\n                </form>\n              </div>\n\n              {curnum == limit - 1 ? (\n                <div class=\"panel-footer\" style={{ textAlign: \"right\" }}>\n                  <a\n                    onClick={() => prevquest()}\n                    style={{ marginRight: 960 }}\n                    class=\"btn btn-success\"\n                  >\n                    Previous\n                  </a>\n                  <a onClick={() => finish()} class=\"btn btn-danger\">\n                    Finish\n                  </a>\n                </div>\n              ) : curnum == 0 ? (\n                <div class=\"panel-footer\" style={{ textAlign: \"left\" }}>\n                  <a onClick={() => nextquest()} class=\"btn btn-success\">\n                    Next\n                  </a>\n                </div>\n              ) : (\n                <div class=\"panel-footer\" style={{ textAlign: \"left\" }}>\n                  <a onClick={() => prevquest()} class=\"btn btn-success\">\n                    Previous\n                  </a>\n                  <a\n                    onClick={() => nextquest()}\n                    class=\"btn btn-success\"\n                    style={{ marginLeft: 15 }}\n                  >\n                    Next\n                  </a>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Test7;\n"]},"metadata":{},"sourceType":"module"}